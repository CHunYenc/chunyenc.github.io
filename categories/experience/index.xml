<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Experience on CY | 程式小角落</title><link>/categories/experience/</link><description>Recent content in Experience on CY | 程式小角落</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><managingEditor>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</managingEditor><webMaster>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</webMaster><lastBuildDate>Sat, 10 Feb 2024 00:20:00 +0800</lastBuildDate><atom:link href="/categories/experience/index.xml" rel="self" type="application/rss+xml"/><item><title>Gunicorn - 輸出 Console Log, 在 Railway.</title><link>/p/gunicorn-output-console-log/</link><pubDate>Sat, 10 Feb 2024 00:20:00 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/gunicorn-output-console-log/</guid><description>在 Railway 上使用 Gunicorn 時，如何輸出 Console Log，不然沒辦法知道系統的運行狀況。</description><tags><tag>Python</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>這篇的產出主要是因為我自己在使用 Railway.app (Paas 平台) 的時候，發現沒有辦法看到 Gunicorn 的 Console Log &amp;hellip; 如果系統有問題，我根本不知道發生了什麼事情。&lt;/p>
&lt;p>因為筆者過去都使用 Docker Compose + Gunicorn 或是有需要就接到 Nginx (or Apache) 的架構，所以都是直接看 Log。&lt;/p>
&lt;p>甚至 Gunicorn 也可以設定輸出到檔案，然後透過 &lt;code>tail -f&lt;/code> 來觀看。&lt;/p>
&lt;p>但是本次是在 Railway.app 上，所以就有這篇的產出。&lt;/p>
&lt;h1 id="最終設定">最終設定&lt;/h1>
&lt;p>在 Railway.app 上，我們可以透過設定 &lt;code>Custom Start Command&lt;/code> 來達到我們的目的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gunicorn --access-logfile &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span> --error-logfile &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span> app:app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣就可以把 Console Log 輸出到標準輸出 (stdout) 了。&lt;/p>
&lt;h1 id="結論">結論&lt;/h1>
&lt;p>其實非常簡單, 但是我花了一些時間才找到這個設定。&lt;/p>
&lt;p>而且現在大家都靠 GPT-3 了，所以我也不知道這篇文章有沒有人會看到 XDDD&lt;/p>
&lt;p>希望這篇對你有幫助。&lt;/p></content></item><item><title>Win7 - 連線共享印表機時, 出現 0x00000709 錯誤</title><link>/p/win7-error-0x00000709/</link><pubDate>Sat, 27 Jan 2024 17:00:00 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/win7-error-0x00000709/</guid><description>花了很多時間, 分享電腦升級為 Win11, 結果其他電腦都可以連線, 唯獨這台 Win7 一直出現 0x00000709 錯誤.</description><tags><tag>Windows</tag><tag>Share</tag><tag>硬體障礙排除</tag></tags><categories><category>Experience</category><category>Windows</category></categories><image/><content>&lt;h2 id="詳細問題">詳細問題&lt;/h2>
&lt;ul>
&lt;li>分享的電腦為 Win11&lt;/li>
&lt;li>連線的辦公室電腦有 Win7, Win10&lt;/li>
&lt;li>連線共享印表機時, 出現 0x00000709 錯誤&lt;/li>
&lt;li>使用過 &lt;code>共用印表機救星&lt;/code> 也無法解決&lt;/li>
&lt;li>&lt;code>其他台 Win7 可以正常連線&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>簡單來說就是這台電腦無法連線到共享印表機, 但是其他電腦都可以。&lt;/p>
&lt;h2 id="解決方法">解決方法&lt;/h2>
&lt;p>因為 Win7 現在的版本也不會再更新了, 所以就乾脆把它升級到 Win7 最後一個版本了。&lt;/p>
&lt;p>所以使用 UpdatePackage7R2 這個工具, 來升級 Win7 到最後一個版本。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.simplix.info/update7/" target="_blank" rel="noopener"
>UpdatePack7R2&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>更新完就可以了, 很莫名其妙 ..&lt;/p>
&lt;p>但可以成功的方案就是推, 你可以試試看 !&lt;/p>
&lt;h2 id="參考資料">參考資料&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.gdaily.org/22156/updatepack7r2-windows-7-update" target="_blank" rel="noopener"
>UpdatePack7R2 2022，Windows 7 更新包&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.far-beyound.com.tw/news/2/14" target="_blank" rel="noopener"
>萬里資訊 - 解決辦法-無法使用共用印表機0x0000011b與0x00000709等錯誤&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Laravel(v5) - 更改 Response Download PDF 到直接打開 PDF</title><link>/p/laravelv05-change-response-download/</link><pubDate>Fri, 03 Nov 2023 18:50:00 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/laravelv05-change-response-download/</guid><description>碰到 Laravel v5.x 還沒有 response()->file() 所以紀錄一下解決方式</description><tags><tag>PHP</tag><tag>Laravel</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>公司官網使用 &lt;code>Laravel v5.1.x&lt;/code>, 有一個功能是要讓使用者可以下載 PDF 檔案，但是原本的寫法是使用 &lt;code>response()-&amp;gt;download()&lt;/code>，但是這樣會導致使用者下載後還要再去開啟 PDF 檔案，所以要改成直接開啟 PDF 檔案。&lt;/p>
&lt;p>但是我一開始發現 &lt;code>laravel v10.x&lt;/code>, 有 &lt;code>response()-&amp;gt;file()&lt;/code> 可以使用，但是 &lt;code>laravel v5.x&lt;/code> 沒有，所以要另外找方法。&lt;/p>
&lt;h2 id="流程">流程&lt;/h2>
&lt;p>簡單來說操作流程如下, 因為主要在改善使用者瀏覽 PDF 或下載檔案的流程。&lt;/p>
&lt;h3 id="改善前">改善前&lt;/h3>
&lt;div class="mermaid">flowchart LR
step1["點擊下載按鈕"]
step2["等待下載 PDF 檔案
(瀏覽器跳出下載視窗)"]
step3["開啟 PDF 檔案
(使用者自行開啟)"]
step1 --> step2 --> step3
&lt;/div>
&lt;p>可以發現說, 使用者需要等待下載 PDF 檔案, 然後再去開啟(手動) PDF 檔案。&lt;/p>
&lt;h3 id="改善後">改善後&lt;/h3>
&lt;div class="mermaid">flowchart LR
step1["點擊下載按鈕"]
step2["等待開啟 PDF 檔案
(瀏覽器直接開啟 PDF 檔案)"]
step1 --> step2
&lt;/div>
&lt;p>這樣中間就會少一個步驟, 讓使用者可以直接開啟 PDF 檔案。&lt;/p>
&lt;h2 id="更改程式碼前">更改程式碼前&lt;/h2>
&lt;p>因為公司是使用 &lt;code>Laravel v5.1.x&lt;/code>, 所以我們要去找到原本的程式碼在哪裡。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># download.blade.php
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">@&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="k">empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$value2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">a&lt;/span> &lt;span class="nx">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{{ xx::url(&amp;#39;download/&amp;#39;.&lt;/span>&lt;span class="si">$value2[&amp;#39;id&amp;#39;]&lt;/span>&lt;span class="s2">.&amp;#39;?time=&amp;#39;.time())}}&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nx">img&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;../../assets/images/icons/icon-pdf.png&amp;#34;&lt;/span> &lt;span class="nx">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;icon-pdf&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">@&lt;/span>&lt;span class="k">endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nx">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>從上面的 HTML 可以知道, 下載的路徑是 &lt;code>download/{id}&lt;/code>。&lt;/p>
&lt;p>然後還有搭配一個 Icon, 這邊就不多做介紹。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="o">....&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># download/{id}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="na">download&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$file_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$file_name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">....&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這邊就是原本的下載 PDF 檔案的程式碼, 這邊就是會直接透過瀏覽器下載 PDF 檔案。&lt;/p>
&lt;h2 id="有趣的事情">有趣的事情&lt;/h2>
&lt;p>因為透過 PDF 直接打開後，會發現到每次開啟檔案都不是 PDF 檔名了。而是 PDF 文件標題，而公司文件的標題非常的亂 &amp;hellip; 甚至還有一些奇怪的符號、COPY 其他公司的文件來改的 .. 所以後面我又寫了一隻 Python 程式來幫我把全部 PDF 檔案的標題改掉。&lt;/p>
&lt;p>至於 PHP 能不能夠改 PDF 的檔案標題，我沒有找到方法，所以就用 Python 來做了。&lt;/p>
&lt;p>如果你是用 PHP 的話，也歡迎你跟我說你用什麼套件來改 PDF 檔案標題。&lt;/p></content></item><item><title>Php - XAMPP x64 安裝 Oracle Instant Client</title><link>/p/xampp-x64-oracle-instant-client/</link><pubDate>Mon, 21 Aug 2023 07:41:54 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/xampp-x64-oracle-instant-client/</guid><description>公司使用 x64 的OCI8一直沒成功，這邊算是紀錄解決的關鍵點</description><tags><tag>Oracle</tag><tag>PHP</tag><tag>Database</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>近期換了工作，而這份工作是使用原生 PHP。有預計會升級為 &lt;code>Laravel&lt;/code>。&lt;/p>
&lt;p>那在安裝 PHP 開發過程中，遇到一個令人挑戰的問題。公司前輩沒有使用 XAMPP x64 環境下成功安裝 OCI8。主要還是我&lt;code>自發性&lt;/code>去解決這個問題。主要我覺得很簡單，但是中間還是碰到一些問題，所以才會留下這篇文章。&lt;/p>
&lt;p>所以到我解決這件事情前，公司到目前上線的系統都是使用 x32 架構的 OCI8。接下來還要把上線的系統改為 &lt;code>x64&lt;/code>，所以接下來有得忙了 XD&lt;/p>
&lt;p>希望這篇文章能為那些正在尋找解決方案的人們提供一些有價值的指引，幫助大家節省時間和精力。&lt;/p>
&lt;h1 id="關鍵">關鍵&lt;/h1>
&lt;p>主要系統為 &lt;code>Windows&lt;/code>，若要使用 &lt;code>Linux&lt;/code> 可以參考一下安裝過程。&lt;/p>
&lt;h2 id="安裝-xampp">安裝 XAMPP&lt;/h2>
&lt;p>建議優先安裝 &lt;code>Windows x64 v8.1.17 版本&lt;/code>&lt;/p>
&lt;p>&lt;a class="link" href="https://sourceforge.net/projects/xampp/files/XAMPP%20Windows/8.1.17/xampp-windows-x64-8.1.17-0-VS16-installer.exe/download" target="_blank" rel="noopener"
>https://sourceforge.net/projects/xampp/files/XAMPP%20Windows/8.1.17/xampp-windows-x64-8.1.17-0-VS16-installer.exe/download&lt;/a>&lt;/p>
&lt;p>筆者這邊省略安裝過程。&lt;/p>
&lt;h2 id="安裝-oracle-instant-client-驅動程式">安裝 Oracle Instant Client 驅動程式&lt;/h2>
&lt;p>筆者公司是使用 &lt;code>Oracle 11g&lt;/code>。&lt;/p>
&lt;p>前輩使用的 Oracle Client 的版本為 &lt;code>12.2.0.1.0&lt;/code>，那我就版本一樣沒有改。&lt;/p>
&lt;p>驅動網址：&lt;a class="link" href="https://www.oracle.com/tw/database/technologies/instant-client/winx64-64-downloads.html" target="_blank" rel="noopener"
>https://www.oracle.com/tw/database/technologies/instant-client/winx64-64-downloads.html&lt;/a>&lt;/p>
&lt;h3 id="解壓縮並移動全部-dll-檔案">解壓縮並移動全部 dll 檔案&lt;/h3>
&lt;p>首先我們下載完 Oracle Client，就直接解壓縮。&lt;/p>
&lt;p>然後排序&lt;code>檔案類型&lt;/code>，我們要的是 &lt;code>應用程式擴充&lt;/code>，為 .dll 副檔名的檔案。&lt;/p>
&lt;p>如下圖，我們全部複製。&lt;/p>
&lt;p>&lt;img src="/images/20230821_xampp-oci/01.dll-files.png"
loading="lazy"
alt="全部的 dll 檔案"
>&lt;/p>
&lt;h3 id="複製到-xamppapachebin-資料夾">複製到 xampp\apache\bin 資料夾&lt;/h3>
&lt;p>&lt;img src="/images/20230821_xampp-oci/02.apache.png"
loading="lazy"
alt="將 dll 移至 apache/bin 資料夾"
>&lt;/p>
&lt;blockquote>
&lt;p>關鍵之一，如果今天我們使用 XAMPP 啟用 PHP 時，這邊沒有 dll 檔案時，我們的 OCI8 就沒辦法啟動。&lt;/p>
&lt;/blockquote>
&lt;h3 id="複製到-xamppphp-資料夾">複製到 xampp\php 資料夾&lt;/h3>
&lt;p>&lt;img src="/images/20230821_xampp-oci/03.php.png"
loading="lazy"
alt="將 dll 移至 xampp/php 資料夾"
>&lt;/p>
&lt;blockquote>
&lt;p>關鍵之二，如果今天我們 PHP 時，這邊沒有 dll 檔案時，使用 &lt;code>php -m&lt;/code> 指令會顯示錯誤。&lt;/p>
&lt;/blockquote>
&lt;h2 id="安裝-php-oci8-插件">安裝 Php OCI8 插件&lt;/h2>
&lt;p>oci8 插件的說明：&lt;a class="link" href="https://pecl.php.net/package/oci8" target="_blank" rel="noopener"
>https://pecl.php.net/package/oci8&lt;/a>&lt;/p>
&lt;p>筆者目前在 &lt;code>Windows&lt;/code> 最新版為 &lt;code>3.2.1&lt;/code>。&lt;/p>
&lt;p>而網頁中的描述也有提到 &lt;code>Use 'pecl install oci8-3.2.1' to install for PHP 8.1.&lt;/code>，所以我們的 XAMPP 的 PHP 指定版本為 &lt;code>8.1.17&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>關鍵之三，所以插件的版本與 PHP 的版本是互相關聯的。 &lt;code>記得要安裝 ts 版本。&lt;/code>，你可以參考下圖。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="/images/20230821_xampp-oci/04.php_info.png"
loading="lazy"
alt="確認 PHP 有無支援 Thread Safety"
>&lt;/p>
&lt;blockquote>
&lt;p>上面這張圖的紅框位置，會影響到插件的版本&lt;/p>
&lt;/blockquote>
&lt;h3 id="移動-oci8-插件的-dll-檔案">移動 OCI8 插件的 dll 檔案&lt;/h3>
&lt;p>首先我們先進行解壓縮。&lt;/p>
&lt;p>再依照 &lt;code>應用程式擴充&lt;/code> 排序，所以你現在的畫面會與下圖一樣。&lt;/p>
&lt;p>&lt;img src="/images/20230821_xampp-oci/05.php-oci-driver.jpg"
loading="lazy"
alt="OCI8 插件圖片"
>&lt;/p>
&lt;p>然後把紅框選取的檔案複製到下圖 &lt;code>XAMPP PHP&lt;/code> 插件位置。&lt;/p>
&lt;p>&lt;img src="/images/20230821_xampp-oci/06.jpg"
loading="lazy"
alt="OCI8 插件的 PHP 位置"
>&lt;/p>
&lt;h2 id="設定-phpini">設定 php.ini&lt;/h2>
&lt;p>驅動程式到這邊都裝好了。&lt;/p>
&lt;p>接下來要讓 PHP 啟用，需要到下圖的位置 &lt;code>xampp/php/php.ini&lt;/code> 檔案來啟用 &lt;code>OCI&lt;/code> .&lt;/p>
&lt;p>&lt;img src="/images/20230821_xampp-oci/07.jpg"
loading="lazy"
alt="PHP ini 啟動 OCI 位置"
>&lt;/p>
&lt;blockquote>
&lt;p>這邊筆者是啟用 &lt;code>oci8_19&lt;/code>，來進行測試。&lt;/p>
&lt;/blockquote>
&lt;h2 id="檢查有無啟用">檢查有無啟用&lt;/h2>
&lt;p>&lt;img src="/images/20230821_xampp-oci/08.jpg"
loading="lazy"
alt="檢查 OCI8 有無安裝成功"
>&lt;/p>
&lt;h2 id="完成">完成&lt;/h2></content></item><item><title>Nginx - 將 HTTP 的網頁上線成 HTTPS.</title><link>/p/nginx-add-https/</link><pubDate>Sun, 14 May 2023 10:42:02 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/nginx-add-https/</guid><description>以前就上線過 HTTPS, 但這次設定被其他環境干擾, 害我花了超出預期的時間.</description><tags><tag>Django</tag><tag>Nginx</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>前陣子再協助朋友設定 NGINX 時, 發現手邊都沒有在做紀錄 HTTPS 的設定, 所以這次就來紀錄一下。&lt;/p>
&lt;p>其實不難，只是擔心朋友針對機器在做轉 Port 的設定 .. 這樣就會讓我很頭痛了。&lt;/p>
&lt;p>當然後面有解決, 但是花了超出預期的時間。&lt;/p>
&lt;blockquote>
&lt;p>小提醒：下面的路徑都是絕對路徑，因為使用的是 Docker，所以路徑會有點不一樣。你可以依照自己的環境去做設定。&lt;/p>
&lt;/blockquote>
&lt;p>這邊就不特別說明 Docker 的設定及路徑怎麼查詢囉 !&lt;/p>
&lt;h1 id="設定檔案">設定檔案&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 443 ssl;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen [::]:443 ssl;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name www.example.com;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # ssl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate /home/example/example.crt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate_key /home/example/example.key;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_session_timeout 5m;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_prefer_server_ciphers on;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> root /var/www/html/;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index index.html;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location /config {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> root /var/www/html/;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index config.json;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # error
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> error_page 500 502 503 504 /50x.html;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 5000 ssl;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen [::]:5000 ssl;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name www.example.com;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # ssl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate /home/example/example.crt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate_key /home/example/example.key;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_session_timeout 5m;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_prefer_server_ciphers on;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # path
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_pass http://myip.com:8080;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # proxy header
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Real-IP $remote_addr;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_connect_timeout 300;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_send_timeout 300;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_read_timeout 300;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> send_timeout 300;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> keepalive_timeout 300s;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> client_body_timeout 300s;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # error
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> error_page 500 502 503 504 /50x.html;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 80 default_server;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen [::]:80 default_server;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name www.example.com;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return 301 https://www.example.com$request_uri;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></item><item><title>Logtail - 一個彙整免費 Paas 平台的日誌平台</title><link>/p/logtail-log-management/</link><pubDate>Thu, 13 Apr 2023 02:46:15 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/logtail-log-management/</guid><description>筆者從 papertrailapp 毫不猶豫直接跳到 logtail.</description><tags><tag>Logtail</tag><tag>Render.com</tag><tag>Heroku</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>因筆者有使用 Heroku、Render.com、Railway 的經驗，那他們都是 PaaS (Platform as a Service，平台及服務) 的服務平台。&lt;/p>
&lt;blockquote>
&lt;p>這些 PaaS 平台通常提供了開發工具、執行環境、資料庫、身份驗證、監控等服務，讓開發人員可以專注於應用程式的開發，而不必擔心基礎架構的建設。&lt;/p>
&lt;/blockquote>
&lt;p>筆者在這邊有分配不同平台的使用情境：(沒列就是我沒使用 ..)&lt;/p>
&lt;ul>
&lt;li>&lt;code>Heroku&lt;/code>：主要負責應用上線 &lt;code>學生身分免費&lt;/code>&lt;/li>
&lt;li>&lt;code>Render.com&lt;/code>：主要負責應用上線、靜態網站 &lt;code>免費&lt;/code>&lt;/li>
&lt;li>&lt;code>Railway.app&lt;/code>：主要負責 RDBMS 資料庫 (PostgreSQL)、快取資料庫 (Redis) &lt;code>免費&lt;/code>
&lt;ul>
&lt;li>&lt;strong>Railway.app&lt;/strong> 目前有推薦機制，筆者的推薦連結 &amp;ndash;&amp;gt; &lt;a class="link" href="https://railway.app?referralCode=37Lpxy" target="_blank" rel="noopener"
>https://railway.app?referralCode=37Lpxy&lt;/a>&lt;/li>
&lt;li>&lt;strong>Railway.app 目前還沒有支援 log stream&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>那可以知道我在 PaaS 的部份用的非常兇猛，甚至 logging 非常分散，但是 &lt;code>機器不同源，日誌是類似&lt;/code>。所以我需要一個有效的方式來&lt;code>收集&lt;/code>、&lt;code>管理&lt;/code>和&lt;code>分析&lt;/code>這些日誌，以便進行&lt;code>錯誤排查&lt;/code>、&lt;code>性能優化&lt;/code>和&lt;code>安全監控&lt;/code>等。&lt;/p>
&lt;p>接下來就是要來講比較實際的 Logtail 的 &lt;code>使用過程(串接)&lt;/code> 到 &lt;code>好處(優點)&lt;/code>。&lt;/p>
&lt;h1 id="好處一無痛串接-paas-平台">好處一：無痛串接 Paas 平台&lt;/h1>
&lt;h2 id="heroku">Heroku&lt;/h2>
&lt;p>綁定 &lt;code>Heroku&lt;/code> 前，先到 &lt;code>Logtail&lt;/code> 申請後就可以直接來用了 .. (如下圖)&lt;/p>
&lt;p>&lt;img src="/images/20230413_logtail/01.png"
loading="lazy"
alt="綁定的過程"
>&lt;/p>
&lt;p>所以你只要做四件事：&lt;/p>
&lt;ol>
&lt;li>把你的應用程式部屬到 &lt;code>Heroku&lt;/code>，確定可以使用 !&lt;/li>
&lt;li>到 &lt;code>Logtail&lt;/code> 申請一個 &lt;code>來源(Sources)&lt;/code>，依照上圖的步驟操作一次。&lt;/li>
&lt;li>然後你就不斷地在 &lt;code>1 步驟&lt;/code> 的應用程式不斷刷新頁面.&lt;/li>
&lt;li>觀察 Logtail 有沒有新增加 logging.&lt;/li>
&lt;/ol>
&lt;h2 id="rendercom">Render.com&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">待補，但基本上跟上面一樣 ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="好處二內建-grafana-視覺化平台">好處二：內建 Grafana 視覺化平台&lt;/h1>
&lt;p>Grafana 是一個流行的開源數據視覺化和監控平台，它提供了&lt;code>強大的儀表板&lt;/code>和&lt;code>視覺化工具&lt;/code>。&lt;/p>
&lt;p>我今天也主要不是探討這個平台，自己用的也不是非常熟。&lt;/p>
&lt;blockquote>
&lt;p>筆者使用 papertrailapp 只能串接到自己的視覺化平台，超貴。&lt;/p>
&lt;/blockquote>
&lt;h1 id="好處三異常通知">好處三：異常通知&lt;/h1>
&lt;blockquote>
&lt;p>papertrailapp 一樣有。&lt;/p>
&lt;/blockquote>
&lt;h1 id="好處三其他平台有的基本上都有-">好處三：其他平台有的基本上都有 ..&lt;/h1>
&lt;h1 id="缺點錢">缺點：錢&lt;/h1>
&lt;h1 id="建議還是自架">建議：還是自架&lt;/h1>
&lt;p>主要還是回到錢的部分，一個月 24 USD 真的不便宜。&lt;/p>
&lt;p>目前是有朝向 Graylog(&lt;code>ElasticSearch&lt;/code> or &lt;code>OpenSearch&lt;/code>) + Grafana 來建。&lt;/p>
&lt;p>這邊之後再給大家講一下我的架構。&lt;/p></content></item><item><title>網頁原生表單 01 - 如何將表單更改為 Javascript 的函式送出 ?</title><link>/p/form-submit-prevent/</link><pubDate>Fri, 24 Mar 2023 08:24:11 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/form-submit-prevent/</guid><description>如果不更改，按下 Enter 讓表單送出後會在網址列 URL 加上 ? (問號).</description><tags><tag>HTML</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>在網頁開發中，表單是最常見的元素之一。不管是在登入視窗、新增資料，都需要表單的元素進行開發。&lt;/p>
&lt;p>但是當使用者提交表單時，預設情況下，瀏覽器會將表單數據轉換為 URL 字符串，並在網址末尾添加問號和表單數據。&lt;/p>
&lt;p>例如說我表單中有一個 &lt;code>name&lt;/code> 的欄位，填寫了 &lt;code>John&lt;/code>。這時候送出表單會發送什麼事 ?&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在網址後面加上 ?name=John&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">http://localhost/?name&lt;span class="o">=&lt;/span>John
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然而，這種情況可能會導致安全性問題或頁面顯示不佳。&lt;/p>
&lt;blockquote>
&lt;p>筆者的情況就是出現 &lt;code>?&lt;/code> 導致跳轉至首頁失敗&lt;/p>
&lt;/blockquote>
&lt;p>重點：&lt;/p>
&lt;p>在這篇文章中，我們將介紹如何使用 JavaScript 預設提交表單，避免 URL 中顯示問號和表單數據。&lt;/p>
&lt;h1 id="解決方式">解決方式&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-app&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;inspire&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- Vue2 - 使用套件 Vuetify 表單 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-form&lt;/span> &lt;span class="na">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;form&amp;#34;&lt;/span> &lt;span class="na">lazy-validation&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="na">submit&lt;/span>&lt;span class="err">.&lt;/span>&lt;span class="na">prevent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;login&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 帳號欄位 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-text-field&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">v-model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;form_data.name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">:rules&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;rules.name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;帳號&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">required&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">v-text-field&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 密碼欄位 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-text-field&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">v-model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;form_data.password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">:append-icon&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;show_pwd ? &amp;#39;mdi-eye&amp;#39; : &amp;#39;mdi-eye-off&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">:type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;show_pwd ? &amp;#39;text&amp;#39; : &amp;#39;password&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;密碼&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">:rules&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;rules.password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="na">click:append&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;show_pwd = !show_pwd&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">required&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">v-text-field&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 送出按鈕 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-btn&lt;/span> &lt;span class="na">dark&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span> &lt;span class="na">block&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;mt-8&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;submit&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>登入&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">v-btn&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">v-form&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">v-app&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;LoginPage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">}),&lt;/span> &lt;span class="c1">// 非探討區域
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">login&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$refs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">validate&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 驗證
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">account&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pwd&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$router&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 跳轉頁面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;login failed&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 顯示錯誤
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>眼尖的你應該有發現我的 &lt;code>login()&lt;/code> 如何觸發 ?&lt;/p>
&lt;p>在 form 元素使用 &lt;code>@submit.prevent&lt;/code> 來觸發 submit 事件 !&lt;/p>
&lt;p>其實這個問題沒有太多技巧，就想做這個紀錄，讓自己知道其實 &lt;code>form&lt;/code> 元素還有其他事情可以做。&lt;/p>
&lt;h1 id="後續">後續&lt;/h1>
&lt;p>除了 submit.prevent 以外，form 元素中還有以下的事件修飾符：&lt;/p>
&lt;p>.lazy：在表單提交時只驗證那些已經被修改過的表單欄位，而不是驗證所有欄位。這樣可以提高表單提交的效率。&lt;/p>
&lt;p>.number：將表單欄位的值轉換為數字，如果轉換失敗則返回空字符串。&lt;/p>
&lt;p>.trim：自動去除表單欄位值的開頭和結尾的空格。&lt;/p>
&lt;p>.lazy + .number + .trim：同時應用上面的三種事件修飾符，即只驗證修改過的欄位、轉換為數字並去除空格。&lt;/p>
&lt;p>除了這些事件修飾符之外，還可以使用 .stop、.capture、.self、.once 等事件修飾符。.stop 可以停止事件的傳播，.capture 可以在元素自身之前處理事件，.self 可以限制事件只在元素本身觸發，.once 可以只觸發一次事件。&lt;/p>
&lt;blockquote>
&lt;p>這些都是未來可以研究的東西，那麼我先將資訊貼在這 !&lt;/p>
&lt;p>希望之後我能再加強這部分的事件進行了解。&lt;/p>
&lt;/blockquote></content></item><item><title>PSQL 01 - 踢掉指定的 PostgreSQL Session.</title><link>/p/psql-deleted-session/</link><pubDate>Fri, 03 Mar 2023 06:11:52 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/psql-deleted-session/</guid><description>強制取消後端測試時, 導致無法刪除已經建立的測試資料庫。</description><tags><tag>Django</tag><tag>Python</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>主要是在撰寫 Django 測試時，有時候會因為某些原因導致測試過程強制中斷，例如程式出錯或手動中斷執行等。&lt;/p>
&lt;p>當發生這種情況時，測試資料庫可能會佔有一些 session 無法正確刪除，進而影響測試的正確性。&lt;/p>
&lt;p>以下是發生的一些關鍵字或 &amp;hellip;. 問題&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> user@vm:~/backend$ python manage.py &lt;span class="nb">test&lt;/span> SomethingTestCase -v &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Creating &lt;span class="nb">test&lt;/span> database &lt;span class="k">for&lt;/span> &lt;span class="nb">alias&lt;/span> &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;test_template&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Got an error creating the &lt;span class="nb">test&lt;/span> database: database &lt;span class="s2">&amp;#34;test_template&amp;#34;&lt;/span> already exists
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Type &lt;span class="s1">&amp;#39;yes&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> you would like to try deleting the &lt;span class="nb">test&lt;/span> database &lt;span class="s1">&amp;#39;test_template&amp;#39;&lt;/span>, or &lt;span class="s1">&amp;#39;no&amp;#39;&lt;/span> to cancel: yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Destroying old &lt;span class="nb">test&lt;/span> database &lt;span class="k">for&lt;/span> &lt;span class="nb">alias&lt;/span> &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;test_template&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Got an error recreating the &lt;span class="nb">test&lt;/span> database: database &lt;span class="s2">&amp;#34;test_template&amp;#34;&lt;/span> is being accessed by other users
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DETAIL: There is &lt;span class="m">1&lt;/span> other session using the database.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到最後有出現一行關於 database session 的問題。&lt;/p>
&lt;p>&lt;code>DETAIL: There is 1 other session using the database.&lt;/code>&lt;/p>
&lt;h1 id="如何解決">如何解決&lt;/h1>
&lt;h2 id="查詢目前在-postgresql-中的-session-有幾個-">查詢目前在 PostgreSQL 中的 Session 有幾個 ?&lt;/h2>
&lt;p>當 PostgreSQL 資料庫中發現有用戶端連線時，就會產生一個會話或連線的記錄。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pg_stat_activity&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用此命令可以查詢正在執行的所有 SQL 語句、會話的狀態、用戶名、資料庫名、主機名、客戶端應用程式等資訊。&lt;/p>
&lt;p>可用於診斷資料庫中的問題，例如瞭解目前資料庫是否被其他用戶連線、哪些查詢正在執行，以及為什麼某些查詢會長時間運行等。&lt;/p>
&lt;h3 id="範例">範例&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>datid&lt;/th>
&lt;th>datname&lt;/th>
&lt;th>pid&lt;/th>
&lt;th>usesysid&lt;/th>
&lt;th>username&lt;/th>
&lt;th>application_name&lt;/th>
&lt;th>client_addr&lt;/th>
&lt;th>query&lt;/th>
&lt;th>&amp;hellip;&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>10000&lt;/td>
&lt;td>test_template&lt;/td>
&lt;td>2191385&lt;/td>
&lt;td>10&lt;/td>
&lt;td>postgres&lt;/td>
&lt;td>DBeaver 22.3.5&amp;hellip;&lt;/td>
&lt;td>192.168.x.1&lt;/td>
&lt;td>select a ..&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>19000&lt;/td>
&lt;td>template&lt;/td>
&lt;td>2191386&lt;/td>
&lt;td>10&lt;/td>
&lt;td>postgres&lt;/td>
&lt;td>DBeaver 21&amp;hellip;&lt;/td>
&lt;td>192.168.x.2&lt;/td>
&lt;td>select b ..&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>範例就是 pg_stat_activity 這張表會呈現的內容，資訊量非常豐富。&lt;/p>
&lt;/blockquote>
&lt;h2 id="如何踢出指定的-session-">如何踢出指定的 Session ?&lt;/h2>
&lt;p>今天假設我要踢掉範例中的 pid 為 2191385 的 Session.　這時候只要打上下方的指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pg_terminate_backend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2191385&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這時候你查詢 &lt;code>SELECT * FROM pg_stat_activity;&lt;/code> 一次，你看一下你打上的 pid 對應的 session 是不是已經被你刪除了 !&lt;/p>
&lt;h2 id="那我要怎麼清楚某個指定-user-下的所有-session-">那我要怎麼清楚某個指定 user 下的所有 session ?&lt;/h2>
&lt;p>這個查詢會返回所有用戶名等於 &lt;code>username&lt;/code> 的 PostgreSQL Session。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pg_stat_activity&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">usename&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;username&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="完成">完成&lt;/h1>
&lt;p>今天是一個 PostgreSQL 的使用知識，正好在寫測時時出現，就把這個過程記錄一下。&lt;/p></content></item><item><title>Django 紀錄 03 - 使用套件 django-environ 管理環境參數 !! 超方便 !!</title><link>/p/django-environ/</link><pubDate>Wed, 01 Mar 2023 17:43:00 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/django-environ/</guid><description>在工作時發現同事使用 .. 發現很好用 !! 所以有花時間研究一下。</description><tags><tag>Django</tag><tag>Python</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>當今年二月不斷的補班的時候 &amp;hellip;　發現團隊內部有人使用 &lt;code>django-environ&lt;/code> 套件。&lt;/p>
&lt;p>筆者過去是使用 &lt;code>python-dotenv&lt;/code>。但是發現 &lt;code>django-environ&lt;/code> 有提供更多針對 &lt;code>django&lt;/code> 框架的框架設定 !&lt;/p>
&lt;ul>
&lt;li>讀取和解析環境檔案 (.env) 中的變數&lt;/li>
&lt;li>將環境變數轉換成適當的 Python 型別&lt;/li>
&lt;li>提供一些方便的方法來取得常用的設定值，如&lt;code>資料庫連接字串&lt;/code>、&lt;code>快取設定&lt;/code>、&lt;code>郵件設定&lt;/code>等&lt;/li>
&lt;li>支援多種格式的環境變數，如 JSON、YAML、INI 等&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>針對 &lt;code>資料庫連接字串&lt;/code>、&lt;code>快取設定&lt;/code> 就是一大優點&lt;/p>
&lt;/blockquote>
&lt;h1 id="優勢-1---資料庫接字串">優勢 1 - 資料庫接字串&lt;/h1>
&lt;h2 id="使用前的設定">使用前的設定&lt;/h2>
&lt;p>筆者再使用 django-environ 前是使用 &lt;code>python-dotenv&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># settings.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DATABASES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;default&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ENGINE&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;django.db.backends.postgresql&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 1- 設定 ENGINE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;NAME&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">variables&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">POSTGRESQL_NAME&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 2- 資料庫名稱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;USER&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">variables&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">POSTGRESQL_USER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 3- 資料庫使用者&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;PASSWORD&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">variables&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">POSTGRESQL_PASSWORD&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 4- 資料庫密碼&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;HOST&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">variables&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">POSTGRESQL_HOST&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 5- 資料庫 IP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;PORT&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">variables&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">POSTGRESQL_PORT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 6- 資料庫 PORT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># variables.py 管理環境變數&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">POSTGRESQL_PASSWORD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getenv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DB_PASSWORD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;DEFAULT_PASSWORD&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 如果沒有 DB_PASSWORD, 就是 DEFAULT_PASSWORD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">POSTGRESQL_HOST&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getenv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DB_HOST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 如果沒有 DB_HOST, 就是 localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">....&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .env&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DB_PASSWORD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">POSTGRESQL_HOST&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">192.168.1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">....&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通常我們使用 Django 去連接資料物的時候可能都會需要這些設定。&lt;/p>
&lt;h2 id="使用後的設定">使用後的設定&lt;/h2>
&lt;p>筆者再使用 django-environ 後就直接縮短這個部分的參數&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># settings.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DATABASES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;default&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">variables&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DATABASE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># variables.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DATABASE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># default load .env DATABASE_URL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .env&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DATABASE_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres://postgres:postgres@192.168.1.1:5432/mydb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果我要更換成 MYSQL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">DATABASE_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres://postgres:postgres@192.168.1.1:5432/mydb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="優勢-2---快取設定">優勢 2 - 快取設定&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">待補
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="reference">Reference&lt;/h1>
&lt;ol>
&lt;li>joke2k/django-environ: Django-environ allows you to utilize 12factor inspired environment variables to configure your Django application. - GitHub. &lt;a class="link" href="https://github.com/joke2k/django-environ" target="_blank" rel="noopener"
>https://github.com/joke2k/django-environ&lt;/a> 已存取 2023/3/1.&lt;/li>
&lt;li>django-environ - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天. &lt;a class="link" href="https://ithelp.ithome.com.tw/articles/10233649" target="_blank" rel="noopener"
>https://ithelp.ithome.com.tw/articles/10233649&lt;/a> 已存取 2023/3/1.&lt;/li>
&lt;li>Welcome to django-environ documentation - Read the Docs. &lt;a class="link" href="https://django-environ.readthedocs.io/" target="_blank" rel="noopener"
>https://django-environ.readthedocs.io/&lt;/a> 已存取 2023/3/1.&lt;/li>
&lt;li>Django-environd的使用(管理配置文件敏感参数和环境变量)_想学废更多东西的猿的博客-CSDN博客_django environ. &lt;a class="link" href="https://blog.csdn.net/zscccccc/article/details/121630824" target="_blank" rel="noopener"
>https://blog.csdn.net/zscccccc/article/details/121630824&lt;/a> 已存取 2023/3/1.&lt;/li>
&lt;/ol></content></item><item><title>Django 紀錄 02 - 如何在 Django 應用使用 Celery 進行系統任務管理</title><link>/p/django-celery-beat/</link><pubDate>Wed, 22 Feb 2023 22:17:10 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/django-celery-beat/</guid><description>雖然 Djang 也有其他的任務套件, 但 Celery 用起來還是問題最少 ..</description><tags><tag>Django</tag><tag>Python</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>最近在使用 &lt;code>django-celery-beat&lt;/code>，發現網路上的參數基本上都舊了。&lt;/p>
&lt;p>所以安裝的方式這邊幫大家梳理一下，有時候網路上的安裝方式可能會導致自己花非常多時間。&lt;/p>
&lt;blockquote>
&lt;p>如果你是老手，可以直接到 Github 查看程式碼。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/CHunYenc/django-celery-beat-example" target="_blank" rel="noopener"
>https://github.com/CHunYenc/django-celery-beat-example&lt;/a>&lt;/p>
&lt;h1 id="版本">版本&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>name&lt;/th>
&lt;th>version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>python&lt;/strong>&lt;/td>
&lt;td>3.10.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>django&lt;/strong>&lt;/td>
&lt;td>4.1.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>celery&lt;/strong>&lt;/td>
&lt;td>5.2.7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>django-celery-beat&lt;/strong>&lt;/td>
&lt;td>2.4.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="步驟">步驟&lt;/h1>
&lt;h2 id="建立虛擬環境">建立虛擬環境&lt;/h2>
&lt;p>當使用 Python 時會使用到大量套件或不同版本的 Python 時，建立虛擬環境可以幫助隔離 Python 的不同版本和套件，以避免版本衝突。&lt;/p>
&lt;blockquote>
&lt;p>為了讓有乾淨的環境, 必須建立虛擬環境 !!&lt;/p>
&lt;/blockquote>
&lt;h3 id="linux--mac">Linux / Mac&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python -m venv .venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="windows">Windows&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">py -3.10 -m venv .venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="進入虛擬環境">進入虛擬環境&lt;/h2>
&lt;p>接下來啟動 Python 虛擬環境，執行後你的 shell 會切換到虛擬環境中。&lt;/p>
&lt;h3 id="linux--mac-1">Linux / Mac&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> .venv/bin/activate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 進入後&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>.venv&lt;span class="o">)&lt;/span> path % ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="windows-1">Windows&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">.venv&lt;span class="se">\S&lt;/span>cripts&lt;span class="se">\A&lt;/span>ctivate.ps1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 進入後&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>.venv&lt;span class="o">)&lt;/span> PS &amp;gt; ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>下面我就僅使用 (.venv) 表示虛擬環境。後面會直接接指令。&lt;/p>
&lt;/blockquote>
&lt;h2 id="安裝套件">安裝套件&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(.venv) pip install django celery[redis] django-celery-beat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="建立-django-project">建立 Django Project&lt;/h2>
&lt;p>這邊筆者的路徑是已經在 &lt;code>/Users/yen/code/django-celery-beat-example&lt;/code>，&lt;/p>
&lt;p>所以當你使用下列指令時，你的 &lt;code>core&lt;/code> 資料夾位置應該會是 &lt;code>/Users/yen/code/django-celery-beat-example/core&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>.venv&lt;span class="o">)&lt;/span> django-admin startproject core .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安裝-django-celery-beat">安裝 Django-Celery-beat&lt;/h2>
&lt;h3 id="coresettingspy-的-installed_apps">core/settings.py 的 INSTALLED_APPS&lt;/h3>
&lt;p>安裝 &lt;code>django-celery-beat&lt;/code> 在 &lt;code>INSTALLED_APPS&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 開發時的習慣, 上線建議不要使用 *&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ALLOWED_HOSTS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 主要內容 INSTALLED_APPS 加入 &amp;#39;django_celery_beat&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSTALLED_APPS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># packages&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;django_celery_beat&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安裝上去會發現，&lt;code>django-celery-beat&lt;/code> 有預設的資料表來控制任務喔 !!!&lt;/p>
&lt;h3 id="corecelerypy">core/celery.py&lt;/h3>
&lt;p>在這個檔案中設定 Celery 的 instance。一般會設定 broker 和 backend 的位置，以及指定 task 檔案的位置等等。有了這個設定之後，Django 就能夠將要執行的 task 發送到 Celery，由 Celery 負責執行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">logging&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">kombu&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Exchange&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Queue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">celery&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Celery&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set the default Django settings module for the &amp;#39;celery&amp;#39; program.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setdefault&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;DJANGO_SETTINGS_MODULE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;core.settings&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 建立一個 Celery 實例，名稱為 core&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Celery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;core&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 設置 broker 和 backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">broker_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;redis://localhost:6379/1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">result_backend&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;redis://localhost:6379/0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 設置時區和序列化方式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timezone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;UTC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">accept_content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;application/json&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">task_serializer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">result_serializer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">beat_scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;django_celery_beat.schedulers:DatabaseScheduler&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 設置要被 celery worker 載入的任務模組&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;core.tasks&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 設置定時任務&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">beat_schedule&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;system-task&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">　&lt;/span>&lt;span class="c1"># Celery 任務名稱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;task&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;system-hello-celery&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># Celery 任務執行的函示名稱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;schedule&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">2.0&lt;/span> &lt;span class="c1"># 每兩秒執行一次&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load task modules from all registered Django apps.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">autodiscover_tasks&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;django.celery&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>broker_url&lt;/code>: Celery 的&lt;code>消息中介&lt;/code>。主要 &lt;code>來處理任務的分發和調度&lt;/code>，因為它可以將分散在各個系統之間的工作協調起來。&lt;/p>
&lt;p>&lt;code>result_backend&lt;/code>: Celery 結果儲存位置。&lt;/p>
&lt;p>&lt;code>timezone&lt;/code>: Celery 的時區。&lt;/p>
&lt;p>&lt;code>accept_content&lt;/code>: Celery Worker 接受的任務格式。除了 &lt;code>json&lt;/code> 外, 還有 &lt;code>pickle&lt;/code> 等等的任務結構。&lt;/p>
&lt;p>&lt;code>task_serializer&lt;/code>: Celery Worker 執行任務(程式)時需要進行序列化以方便傳輸和儲存。這邊使用 &lt;code>json&lt;/code>。&lt;/p>
&lt;p>&lt;code>result_serializer&lt;/code>: Celery Worker 完成任務(程式)時需要進行序列化儲存至 &lt;code>RESULT_BACKEND&lt;/code> 指定的 &lt;code>redis&lt;/code>。這邊也是使用 &lt;code>json&lt;/code>。&lt;/p>
&lt;p>&lt;code>imports&lt;/code>: 你可以使用 &lt;code>[&amp;quot;core.tasks&amp;quot;, &amp;quot;app.tasks.function&amp;quot;]&lt;/code> 來導入你的任務程式。&lt;/p>
&lt;p>&lt;code>beat_schedule&lt;/code>: 是 Celery 預設的調度器，是後端啟動時直接啟用。&lt;/p>
&lt;blockquote>
&lt;p>SERIALIZER 為什麼要設定呢 ? 因為 Celery 4.0 之前是使用 pickle.&lt;/p>
&lt;/blockquote>
&lt;p>其他我沒提到的設定參數可以到下面連結查看。&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.celeryproject.org/en/stable/userguide/configuration.html#configuration-reference" target="_blank" rel="noopener"
>https://docs.celeryproject.org/en/stable/userguide/configuration.html#configuration-reference&lt;/a>&lt;/p>
&lt;h3 id="core__init__py">core/&lt;strong>init&lt;/strong>.py&lt;/h3>
&lt;p>在 &lt;code>__init__.py&lt;/code> 主要是要讓 Django 項目中使用 &lt;code>celery_app&lt;/code> 與 &lt;code>celery_logger&lt;/code> 物件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># core/__init__.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">__future__&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">absolute_import&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">core.celery&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">celery_app&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">celery_logger&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">__all__&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;celery_app&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;celery_logger&amp;#39;&lt;/span>&lt;span class="p">,)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="coretaskspy">core/tasks.py&lt;/h3>
&lt;p>主要將 Celery 要執行的程式寫在此處。而 Celery 就會登入該檔案的函式。&lt;/p>
&lt;p>例如這邊有一個 Celery 函示叫 &lt;code>system-hello-celery&lt;/code>, 就是對應 &lt;code>core/celery.py&lt;/code> 中的 &lt;code>beat_schedule&lt;/code> 內的 task。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">core&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">celery_logger&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">celery&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">shared_task&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@shared_task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;system-hello-celery&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">hello_celery&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">celery_logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;HELLO Celery&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="執行-celery">執行 Celery&lt;/h2>
&lt;h3 id="使用-docker-建立-redis">使用 Docker 建立 redis&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d --restart always -p 6379:6379 --name dev-redis redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果在本機執行 docker, 那麼 IP 就是 &lt;code>localhost:6379&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h3 id="migrate-database">migrate database&lt;/h3>
&lt;p>當您在 Django 中更改模型之後，例如添加、修改或刪除模型，您需要將這些變更反映到資料庫中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(.venv) python manage.py migrate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="run-celery">run celery&lt;/h3>
&lt;h4 id="開發用">開發用&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>.venv&lt;span class="o">)&lt;/span> celery -A core.celery worker -l info -B
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="上線時-production">上線時 (production)&lt;/h4>
&lt;p>在正式環境中，不建議在同一個應用程序中運行 worker 和 beat scheduler，因為會影響應用程序的性能和穩定性。&lt;/p>
&lt;h5 id="第一個-terminal">第一個 terminal&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>.venv&lt;span class="o">)&lt;/span> celery -A core.celery worker --loglevel&lt;span class="o">=&lt;/span>info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="第二個-terminal">第二個 terminal&lt;/h5>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>.venv&lt;span class="o">)&lt;/span> celery -A core.celery beat -l info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>你也可以使用 docker-compose 執行個別一個 services。&lt;/p>
&lt;/blockquote>
&lt;h1 id="完成">完成&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">... 省略
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>2023-02-24 09:47:46,349: INFO/MainProcess&lt;span class="o">]&lt;/span> celery@DESKTOP-7GLUFOT ready.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>2023-02-24 09:47:46,359: INFO/MainProcess&lt;span class="o">]&lt;/span> Task system-hello-celery&lt;span class="o">[&lt;/span>409aa851-639d-4183-92eb-662715a55b41&lt;span class="o">]&lt;/span> received
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HELLO Celery
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>2023-02-24 09:47:46,361: INFO/ForkPoolWorker-2&lt;span class="o">]&lt;/span> HELLO Celery
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>2023-02-24 09:47:46,381: INFO/ForkPoolWorker-2&lt;span class="o">]&lt;/span> Task system-hello-celery&lt;span class="o">[&lt;/span>409aa851-639d-4183-92eb-662715a55b41&lt;span class="o">]&lt;/span> succeeded in 0.02016970000022411s: None
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="後續">後續&lt;/h1>
&lt;p>你還可以透過 &lt;code>django-environ&lt;/code> 套件來優化你的 &lt;code>settings.py&lt;/code> 或 &lt;code>celery.py&lt;/code>，將環境設定的資訊都隱藏。&lt;/p>
&lt;p>那也是我後續要來新增的文章 XD&lt;/p></content></item><item><title>教學 01 - 如何讓 render.com 提供的機器不睡眠</title><link>/p/wakup-machine/</link><pubDate>Fri, 27 Jan 2023 15:53:22 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/wakup-machine/</guid><description>使用 heroku、render.com 等平台的免費機器，基本上都會自動睡眠.</description><tags><tag>GIT</tag><tag>Docker</tag><tag>Heroku</tag><tag>render</tag></tags><categories><category>Experience</category><category>Tutorial</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;blockquote>
&lt;p>祝大家新年快樂 !!!&lt;/p>
&lt;/blockquote>
&lt;p>今天是初六，也休息一陣子了，覺得有點廢。&lt;/p>
&lt;p>主要是因為大四時擔任宿舍網路會長時製作的 LINE-BOT 上線在 &lt;code>heroku&lt;/code>，但是 &lt;code>2022/12&lt;/code> 已經公告說他們要開始收錢了。於是我就將 LINE-BOT 的伺服器轉移到 &lt;code>render.com&lt;/code> 平台。&lt;/p>
&lt;p>那在轉移時有製作一個工具。就是要不間斷的去呼叫免費平台(類似 heroku.com、render.com)。&lt;/p>
&lt;blockquote>
&lt;p>就是要讓機器永遠不睡眠 ! 操爆它 (X)&lt;/p>
&lt;/blockquote>
&lt;p>統整做了三件事：&lt;/p>
&lt;ol>
&lt;li>運用 Python 定時呼叫小應用的網址&lt;/li>
&lt;li>利用 Docker 彈性系統參數&lt;/li>
&lt;li>利用 Docker Compose 定時呼叫多個平台&lt;/li>
&lt;/ol>
&lt;p>本篇不是教你怎麼做這個工具，是教你如何用。&lt;/p>
&lt;p>所以會從 &lt;code>2.&lt;/code> 來教你怎麼做 !&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h1 id="利用-docker-來使用工具">利用 Docker 來使用工具&lt;/h1>
&lt;p>&lt;code>工具只需要透過 Docker 就可以執行囉 !&lt;/code>&lt;/p>
&lt;p>範例如下：&lt;code>範例下方還有部分說明唷 !&lt;/code>&lt;/p>
&lt;p>&lt;code>**** 記得要先建立一個 schedule.log 檔案。&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--restart always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--name wakeup-render &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-e &lt;span class="nv">URL&lt;/span>&lt;span class="o">=&lt;/span>https://yourwebsite.domain.com/ &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-e &lt;span class="nv">APSCHEDULER_DAY_OF_WEEK&lt;/span>&lt;span class="o">=&lt;/span>mon-fri &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-e &lt;span class="nv">APSCHEDULER_MINUTE&lt;/span>&lt;span class="o">=&lt;/span>*/10 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-v /Users/yen/Desktop/schedule.log:/app/scheduler.log &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>chunyenc/wakeup-machine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>--restart&lt;/code> 若重開機將自動執行&lt;/li>
&lt;li>&lt;code>--name&lt;/code> container 的名稱&lt;/li>
&lt;li>&lt;code>-e&lt;/code> 環境變數
&lt;ul>
&lt;li>URL 是你要呼叫的網址&lt;/li>
&lt;li>APSCHEDULER_DAY_OF_WEEK 一週裡面哪幾天執行&lt;/li>
&lt;li>APSCHEDULER_MINUTE 是多少分鐘呼叫一次&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-v&lt;/code> 映射檔案
&lt;ul>
&lt;li>linux 可以使用 &lt;code>pwd&lt;/code> 指令來查看目前的絕對路徑&lt;/li>
&lt;li>schedule.log 就是查看執行 log 的檔案&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="環境變數列表">環境變數列表&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>環境變數&lt;/th>
&lt;th>範例值&lt;/th>
&lt;th>備註&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>URL&lt;/td>
&lt;td>&lt;a class="link" href="https://chunyen.xyz" target="_blank" rel="noopener"
>https://chunyen.xyz&lt;/a>&lt;/td>
&lt;td>呼叫的網址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_YEAR&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_MONTH&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_DAY&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_WEEK&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_DAY_OF_WEEK&lt;/td>
&lt;td>mon-fri&lt;/td>
&lt;td>依照範例，設定週一到週五&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_HOUR&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_MINUTE&lt;/td>
&lt;td>*/10&lt;/td>
&lt;td>依照範例，設定每十分鐘&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APSCHEDULER_SECOND&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>APSCHEDULER 需要參考下面網址來設定
&lt;a class="link" href="https://apscheduler.readthedocs.io/en/3.x/modules/triggers/cron.html" target="_blank" rel="noopener"
>https://apscheduler.readthedocs.io/en/3.x/modules/triggers/cron.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="如果是使用-docker-compose-">如果是使用 Docker Compose ..&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.9&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">service-one&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">chunyenc/wakeup-machine&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">URL=https://one.chunyen.xyz&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">APSCHEDULER_MINUTE=*/10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">APSCHEDULER_HOUR=0-1,5-23&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">APSCHEDULER_DAY_OF_WEEK=mon-fri&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./pricing.log:/app/scheduler.log&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">service-two&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">chunyenc/wakeup-machine&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">URL=https://two.chunyen.xyz&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">APSCHEDULER_MINUTE=*/10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">APSCHEDULER_HOUR=9-23&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./linebot.log:/app/scheduler.log&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></item><item><title>置頂 - 提高效率的必備指令：一份我的常用指令與工具清單</title><link>/p/common-scripts/</link><pubDate>Wed, 18 Jan 2023 11:38:22 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/common-scripts/</guid><description>工作時常使用到的指令與工具</description><tags><tag>GIT</tag><tag>Docker</tag><tag>VSCode</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>主要為存放工作中經常使用的指令、框架、套件。&lt;/p>
&lt;p>若有任何建議或是覺得需要修改的地方還請不吝指教，謝謝！&lt;/p>
&lt;p>如何聯繫我 ?&lt;/p>
&lt;blockquote>
&lt;p>可以利用本篇文章下面留言，導航列也有提供我的社群平台 ~&lt;/p>
&lt;/blockquote>
&lt;h1 id="目錄">目錄&lt;/h1>
&lt;p>電腦版右側有目錄，手機版沒有，這邊的目錄為了手機版而整理 !&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e5%89%8d%e8%a8%80" >前言&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e7%9b%ae%e9%8c%84" >目錄&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%a5%97%e4%bb%b6%e6%a1%86%e6%9e%b6%e5%8d%80" >套件框架區&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#vscode" >VSCode&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#markdown" >Markdown&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%b8%b8%e7%94%a8%e6%8c%87%e4%bb%a4%e5%8d%80" >常用指令區&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#git" >Git&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e4%b8%8b%e8%bc%89%e5%ad%90%e6%a8%a1%e7%b5%84" >下載子模組&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#%e5%88%87%e6%8f%9b%e9%81%a0%e7%ab%af%e5%88%86%e6%94%af" >切換遠端分支&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#vue" >Vue&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#%e6%9b%b4%e6%94%b9-port" >更改 Port&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#docker" >Docker&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#redis" >Redis&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#postgresql" >PostgreSQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="套件框架區">套件框架區&lt;/h1>
&lt;h2 id="vscode">VSCode&lt;/h2>
&lt;h3 id="markdown">Markdown&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/yzhang-gh/vscode-markdown" target="_blank" rel="noopener"
>https://github.com/yzhang-gh/vscode-markdown&lt;/a> &lt;code>自動生成 md 目錄&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="常用指令區">常用指令區&lt;/h1>
&lt;h2 id="git">Git&lt;/h2>
&lt;p>Git 是一個分散式版本控制系統，用於追蹤檔案變更並協助多人共同開發專案。&lt;/p>
&lt;h3 id="下載子模組">下載子模組&lt;/h3>
&lt;p>當你使用 git &lt;code>clone&lt;/code> 下載完儲存庫後，發現沒有下載 submodule, 使用下面的指令可以直接把子模組載入。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-v" data-lang="v">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">git&lt;/span> &lt;span class="nv">submodule&lt;/span> &lt;span class="nv">update&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="切換遠端分支">切換遠端分支&lt;/h3>
&lt;p>&lt;code>待補&lt;/code>&lt;/p>
&lt;h2 id="vue">Vue&lt;/h2>
&lt;h3 id="更改-port">更改 Port&lt;/h3>
&lt;p>&lt;code>cli-services&lt;/code> 版本為 &lt;code>@vue/cli-service&amp;quot;: &amp;quot;~5.0.0&lt;/code>，如果不是也可以試試看。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># default 8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm run serve -- --port &lt;span class="m">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="docker">Docker&lt;/h2>
&lt;h3 id="redis">Redis&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--restart always \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 6379:6379 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name dev-redis \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--network dev-network redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>Q: 為什麼有 dev-network ?&lt;/p>
&lt;p>A: 為了可以讓開發容器可以直接使用 &lt;code>dev-redis&lt;/code> 進行連線 ! 前提是開發容器也要使用 dev-network 建立 !&lt;/p>
&lt;/blockquote>
&lt;h3 id="postgresql">PostgreSQL&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--restart always \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name dev-postgres \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 5432:5432 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-e POSTGRES_PASSWORD=postgres \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-v /home/user/dev-pg-data/pgdata:/var/lib/postgresql/data \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--network dev-network postgres:10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></item><item><title>Cloudflare - 架設 Google-blogger 與 Github-page DNS 困難排除</title><link>/p/cloudflare-dns-error/</link><pubDate>Mon, 16 Jan 2023 00:02:09 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/cloudflare-dns-error/</guid><description>Cloudflare 設定也是一大學問 !</description><tags><tag>Cloudflare</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>主要是有應用架設在 &lt;code>Heroku&lt;/code>, 發現他要所謂 &lt;code>Server Name Indication (SNI)&lt;/code> 的方式來部署 &lt;code>HTTPS&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>結論就是 &lt;code>DNS&lt;/code> 從 &lt;code>Google Domains&lt;/code> 換成 &lt;code>Cloudflare&lt;/code>，然後碰到&lt;code>轉址&lt;/code>、&lt;code>HTTPS&lt;/code>的問題。&lt;/p>
&lt;/blockquote>
&lt;p>透過 &lt;code>Cloudflare&lt;/code> 弄上 &lt;code>HTTPS&lt;/code> 時，發現 &lt;code>Blogger&lt;/code>、&lt;code>Github page&lt;/code> 都不能正常瀏覽。&lt;/p>
&lt;p>因為 &lt;code>Blogger&lt;/code>、&lt;code>Github Page&lt;/code> 本身就可以加上 &lt;code>HTTPS&lt;/code>，但是加上 &lt;code>HTTPS&lt;/code> 後一直不能瀏覽。&lt;/p>
&lt;p>然後 &lt;code>HTTPS&lt;/code> 是可以正常瀏覽。&lt;/p>
&lt;h2 id="問題特徵">問題特徵&lt;/h2>
&lt;p>將前言的整理一下，&lt;code>如果你有下面的問題，可以參考我怎麼解決的！&lt;/code>&lt;/p>
&lt;ol>
&lt;li>&lt;code>http&lt;/code> 可以正常瀏覽頁面。&lt;/li>
&lt;li>改成 &lt;code>https&lt;/code> 無法瀏覽頁面。顯示&lt;code>「這個網頁無法正常運作」&lt;/code>。
&lt;ul>
&lt;li>使用 &lt;code>blogger&lt;/code>
&lt;ul>
&lt;li>步驟 1 - 進入 &lt;code>設定&lt;/code>&lt;/li>
&lt;li>步驟 2 - &lt;code>HTTPS 重新導向&lt;/code> 開啟&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用 &lt;code>Github&lt;/code>
&lt;ul>
&lt;li>步驟 1 - 點擊儲存庫 &lt;code>YOURGITHUBNAME.github.io&lt;/code>&lt;/li>
&lt;li>步驟 2 - 進入 &lt;code>Settings&lt;/code>&lt;/li>
&lt;li>步驟 3 - 點擊 &lt;code>Pages&lt;/code>, 設定頁面並加入自定義 &lt;code>domain&lt;/code>.&lt;/li>
&lt;li>步驟 4 - &lt;code>Enforce HTTPS&lt;/code> 開啟&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>關於第 &lt;code>2&lt;/code> 點。不管是 blogger、Github 都會導致&lt;code>「這個網頁無法正常運作」&lt;/code>的狀況。&lt;/p>
&lt;blockquote>
&lt;p>如果你的狀況跟我很類似，或許你可以試試看 !&lt;/p>
&lt;/blockquote>
&lt;h1 id="設定方式">設定方式&lt;/h1>
&lt;h2 id="將-ssltls-改為-full-模式">將 &lt;code>SSL/TLS&lt;/code> 改為 &lt;code>FULL&lt;/code> 模式&lt;/h2>
&lt;p>&lt;img src="/images/20230116/01-full.jpg"
loading="lazy"
alt="Cloudflare SSL/TLS 設定"
>&lt;/p>
&lt;p>我原本的設定是 &lt;code>Flexible (彈性)&lt;/code> 模式。&lt;/p>
&lt;p>關於 Flexible 模式的說明，其實 &lt;code>Cloudflare&lt;/code> 官方文檔有提到碰到的問題。&lt;/p>
&lt;p>&lt;a class="link" href="https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes/flexible/" target="_blank" rel="noopener"
>Flexible 模式&lt;/a>&lt;/p>
&lt;p>&lt;code>Flexible&lt;/code> 雖然開啟後好用，可以將 &lt;code>HTTP&lt;/code> 的網頁透過 &lt;code>Cloudflare&lt;/code> 的處理後變成 &lt;code>HTTPS&lt;/code>。&lt;/p>
&lt;p>但是原本的網頁已經有 &lt;code>HTTPS&lt;/code> 時，就要透過 &lt;code>FULL&lt;/code> 模式去做處理。&lt;/p>
&lt;blockquote>
&lt;p>如果你的網頁都是使用 &lt;code>HTTP&lt;/code>，那麼你可以預設 &lt;code>Flexible&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h2 id="路由規則">路由規則&lt;/h2>
&lt;p>了解路由規則時，先釐清自己的使用需求是不是符合。&lt;/p>
&lt;p>我的主網域：&lt;a class="link" href="https://chunyen.xyz" target="_blank" rel="noopener"
>https://chunyen.xyz&lt;/a> (Github Page，有 &lt;code>HTTPS&lt;/code>)&lt;/p>
&lt;p>我的子網域：&lt;a class="link" href="https://b.chunyen.xyz" target="_blank" rel="noopener"
>https://b.chunyen.xyz &lt;/a> (Blogger，有 &lt;code>HTTPS&lt;/code>)&lt;/p>
&lt;p>我的子網域：&lt;a class="link" href="https://p.chunyen.xyz" target="_blank" rel="noopener"
>http://p.chunyen.xyz&lt;/a> (自己的應用，無 &lt;code>HTTPS&lt;/code>)&lt;/p>
&lt;p>假設我的網頁、部落格內建的 &lt;code>HTTPS&lt;/code> 較多，其實我就直接使用 &lt;code>FULL&lt;/code> 模式。&lt;/p>
&lt;p>若是相反呢？我就使用 &lt;code>Flexible&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>再透過 Cloudflare 路由規則將指定的網頁設定成其他模式 ! 只有三個的扣打可以使用其他模式。&lt;/p>
&lt;/blockquote>
&lt;p>步驟：&lt;/p>
&lt;ol>
&lt;li>點擊 &lt;code>規則&lt;/code>&lt;/li>
&lt;li>再點擊 &lt;code>網頁規則&lt;/code> 同一頁的 &lt;code>建立網頁規則&lt;/code>&lt;/li>
&lt;li>&lt;code>填入 URL&lt;/code> 後，記得要選取 &lt;code>挑選設定&lt;/code> 的 &lt;code>SSL&lt;/code> 為你要設定的模式。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="/images/20230116/03-rule-example.jpg"
loading="lazy"
alt="Cloudflare SSL/TLS 路由規則"
>&lt;/p>
&lt;p>接下來應該沒問題了 ! 免費時間等超久。&lt;/p>
&lt;blockquote>
&lt;p>但是免費的還是等吧 xD&lt;/p>
&lt;/blockquote>
&lt;h2 id="最後的設定">最後的設定&lt;/h2>
&lt;p>&lt;img src="/images/20230116/04-result.jpg"
loading="lazy"
alt="Cloudflare SSL/TLS 路由規則的結果"
>&lt;/p>
&lt;ol>
&lt;li>我將 &lt;code>SSL/TLS&lt;/code> 設定為彈性。&lt;/li>
&lt;li>另外透過兩個 &lt;code>路由規則&lt;/code> 來設定我的 &lt;code>blogger&lt;/code>、&lt;code>github page&lt;/code> 的網頁&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>路由規則的部分剩下一個扣打。&lt;/p>
&lt;/blockquote>
&lt;p>若依照我的設定，應該你的網頁就可以正常瀏覽了！&lt;/p>
&lt;p>花了非常多時間。但沒想到 &lt;code>Cloudflare&lt;/code> 提供這麼多免費的服務，之前一直有看到這間公司的 Logo，但一直沒機會使用。&lt;/p>
&lt;h1 id="完成-">完成 !&lt;/h1></content></item><item><title>GIT 小撇步 02 - 教你如何刪除 commit 過的大檔案, 超占空間 !</title><link>/p/git-deleted-commit-big-files/</link><pubDate>Wed, 21 Dec 2022 13:36:01 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/git-deleted-commit-big-files/</guid><description>因為在準備 CI/CD 要減少每個步驟的耗費的時間，導致要整理 git ..</description><tags><tag>GIT</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>準備要幫自己手上的專案套上 CI/CD，但是發現過去的資料其實沒有使用 &lt;code>submodule&lt;/code> 的方式去管理 &lt;code>data&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>此處的 &lt;code>data&lt;/code> 是一個資料夾，裡面放的是客戶系統的資料。會有 &lt;code>.csv&lt;/code> or &lt;code>.json&lt;/code> 的檔案。&lt;/p>
&lt;/blockquote>
&lt;p>所以導致系統的 &lt;code>儲存庫 (repository)&lt;/code> 異常的大，都是大在過去 commit 過的紀錄。&lt;/p>
&lt;blockquote>
&lt;p>最新的 commit 已經把所謂 &lt;code>data&lt;/code> 的資料夾刪除了，但是 git 其實還會幫你存在 &lt;code>.git&lt;/code> 資料夾&lt;/p>
&lt;/blockquote>
&lt;h1 id="參考文章">參考文章&lt;/h1>
&lt;blockquote>
&lt;p>感謝這邊的文章，雖然我還是卡一陣子，導致這篇文的產生 XD&lt;/p>
&lt;/blockquote>
&lt;h2 id="csdn---彻底删除git中的较大文件包括历史提交记录httpsblogcsdnnethappyrockingarticledetails89313501">&lt;a class="link" href="https://blog.csdn.net/HappyRocking/article/details/89313501" target="_blank" rel="noopener"
>CSDN - 彻底删除git中的较大文件（包括历史提交记录）&lt;/a>&lt;/h2>
&lt;h2 id="高見龍---為你自己學-githttpsgitbooktwchaptersfaqremove-sensitive-data">&lt;a class="link" href="https://gitbook.tw/chapters/faq/remove-sensitive-data" target="_blank" rel="noopener"
>高見龍 - 為你自己學 Git&lt;/a>&lt;/h2>
&lt;h2 id="nils-jonsson---rebasing-tags-in-git-repositorieshttpsblognilsjonssoncompost4421450571rebasing-tags-in-git-repositories">&lt;a class="link" href="https://blog.nilsjonsson.com/post/4421450571/rebasing-tags-in-git-repositories" target="_blank" rel="noopener"
>Nils Jonsson - Rebasing tags in Git repositories&lt;/a>&lt;/h2>
&lt;h1 id="先說結論">先說結論&lt;/h1>
&lt;p>尚未優化前，佔 &lt;code>1.2G&lt;/code>&lt;/p>
&lt;p>優化後，佔 &lt;code>121MiB&lt;/code>&lt;/p>
&lt;h1 id="步驟">步驟&lt;/h1>
&lt;h2 id="建議執行前-fork-一份">建議執行前 fork 一份&lt;/h2>
&lt;p>可以在本地端或伺服器端。&lt;/p>
&lt;p>local 端&lt;/p>
&lt;ul>
&lt;li>做錯的話你可以直接 copy 重新&lt;/li>
&lt;li>不用一直 clone&lt;/li>
&lt;/ul>
&lt;p>remote 端&lt;/p>
&lt;ul>
&lt;li>主要是備份 .. 東西不見太恐怖了 !!!&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>請確實做好備份。&lt;/p>
&lt;/blockquote>
&lt;h2 id="重新-clone-一次-重新下載你的程式碼">重新 clone 一次 (重新下載你的程式碼)&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone https://..... project
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我這邊範例將下載的資料夾取為 &lt;code>project&lt;/code>&lt;/p>
&lt;p>這個動作是為了確保你本地端的程式碼與伺服器端的程式碼相同。&lt;/p>
&lt;blockquote>
&lt;p>因為我們主要要解決儲存庫的　&lt;code>.git&lt;/code>　資料夾。&lt;/p>
&lt;/blockquote>
&lt;h2 id="查看-10-個在-git-裡面最大的檔案">查看 10 個在 Git 裡面最大的檔案&lt;/h2>
&lt;p>先假設 10 個檔案就可以找到我們心目中想要刪掉的檔案名稱，那為什麼我都使用 &lt;code>git rm&lt;/code>　的指令，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git rev-list --all &lt;span class="p">|&lt;/span> xargs -rL1 git ls-tree -r --long &lt;span class="p">|&lt;/span> sort -uk3 &lt;span class="p">|&lt;/span> sort -rnk4 &lt;span class="p">|&lt;/span> head -10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="刪除-git-檔案">刪除 Git 檔案&lt;/h2>
&lt;p>提供你複製，複製後將 &lt;code>檔案名稱&lt;/code> 更改掉，因為他要打上你想要刪除的檔案 or 資料夾。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git filter-branch --force --index-filter &lt;span class="s1">&amp;#39;git rm -rf --cached --ignore-unmatch 檔案名稱&amp;#39;&lt;/span> --prune-empty --tag-name-filter cat -- --all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面是我的範例，提供給你參考。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># example 刪除 data folder, csv and json file.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git filter-branch --force --index-filter &amp;#39;git rm -rf --cached --ignore-unmatch data *.json *.csv&amp;#39; --prune-empty --tag-name-filter cat -- --all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>*.json&lt;/code> ：刪除 &lt;code>.json&lt;/code> 檔名的檔案。&lt;/li>
&lt;li>&lt;code>--forec&lt;/code> ：強制刪除&lt;/li>
&lt;li>&lt;code>--index-filter&lt;/code> ：刪除的時候索引重寫。&lt;/li>
&lt;li>&lt;code>--prune-empty&lt;/code>：將空白的 commit 刪除。&lt;/li>
&lt;li>&lt;code>--tag-name-filter tag&lt;/code>: 將會重寫 tag 的索引。&lt;/li>
&lt;/ul>
&lt;p>Git 官方網站：&lt;a class="link" href="https://git-scm.com/docs/git-filter-branch" target="_blank" rel="noopener"
>filter-branch&lt;/a>&lt;/p>
&lt;h1 id="清理-git-資料夾">清理 .git 資料夾&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">rm -rf .git/refs/original/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git reflog expire --expire&lt;span class="o">=&lt;/span>now --all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git gc --prune&lt;span class="o">=&lt;/span>now
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git gc --aggressive --prune&lt;span class="o">=&lt;/span>now
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin master --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這邊我有先將伺服器端的儲存庫刪除，再重新上傳。&lt;/p>
&lt;blockquote>
&lt;p>注意要備份啊 !!!!!!&lt;/p>
&lt;/blockquote>
&lt;p>另外你也可以透過下面的指令看現在 .git 或 資料夾內部的使用空間。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看 git 資料夾的使用空間&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">du -sh .git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看全部檔案的使用空間, 但看不到 .git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">du -sh *
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></item><item><title>Flask 紀錄 01 - 使用 Flask-Caching 和 Redis 實現快速緩存的方法</title><link>/p/flask-caching-redis/</link><pubDate>Thu, 17 Nov 2022 22:57:28 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/flask-caching-redis/</guid><description>Flask 上下文導致 redis 引入一直有問題, 所以改用 Flask-Caching, 但是 ...</description><tags><tag>Flask</tag><tag>Python</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="簡介">簡介&lt;/h1>
&lt;p>主要在 Flask 連接 redis 一直發生問題，所以使用 &lt;code>Flask-Caching&lt;/code> 來處理讀寫 redis.&lt;/p>
&lt;p>但是還是有一點問題，就是 &lt;code>Flask-Caching&lt;/code> 官方沒有支援讀取 redis 的用法，但是在網路上有看到一則留言。&lt;/p>
&lt;p>成功所以紀錄一下。&lt;/p>
&lt;blockquote>
&lt;p>程式碼在此 &lt;a class="link" href="https://github.com/CHunYenc/get-crypto-price-backend/blob/dev/flask-no-celery/app/socket.py" target="_blank" rel="noopener"
>Github - CHunYenc/get-crypto-price-backend(dev/flask-no-celery)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Flask-Cacing 文檔 &lt;a class="link" href="https://flask-caching.readthedocs.io/en/latest/" target="_blank" rel="noopener"
>Flask-Caching docs&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="安裝-flask-caching">安裝 Flask-Caching&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pip install Flask-Caching
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="init-flask-caching">Init Flask-Caching&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_caching&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Cache&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cache&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Cache&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;CACHE_TYPE&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;RedisCache&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">app_context&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Caching&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">init_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="讀-redis-特殊方式">讀 redis 特殊方式&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">k_prefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">key_prefix&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_write_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k_prefix&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;utf8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">keys&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k_prefix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">keys&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>k_prefix 是 Flask-Caching 會自動加入 flask-cache 在 redis 上面，所以需要把 k_prefix 去除。&lt;/p>
&lt;blockquote>
&lt;p>程式碼參考位置 /backend/app/socket.py&lt;/p>
&lt;/blockquote></content></item><item><title>Docker 紀錄 03 - 經常使用的 docker 指令</title><link>/p/docker-common-commands/</link><pubDate>Sat, 03 Sep 2022 12:55:54 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/docker-common-commands/</guid><description/><tags><tag>Docker</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="正文">正文&lt;/h1>
&lt;h2 id="建立-image">建立 image&lt;/h2>
&lt;p>提供複製的指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># create image from dockerfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker build -t &amp;lt;image-name&amp;gt; . --no-cache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>實際上在使用的時候，會是以下的範例。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker build -t mydocker . --no-cache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>輸入完後 docker image 就會開始建立。&lt;/p>
&lt;p>完成後，進行檢查時就使用下面的指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker images
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然後就顯示機器上擁有的 docker images&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mydocker latest 0a045e9f442f 19 minutes ago 568MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="執行-image">執行 image&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run &amp;lt;image-name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="刪除-image">刪除 image&lt;/h2>
&lt;p>如何先查看本機上已經建立的 image 清單.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker images
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mydocker latest 0a045e9f442f &lt;span class="m">19&lt;/span> minutes ago 568MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 這邊刪除上面建立的 image &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker rmi 0a045e9f442f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="範例">範例&lt;/h1>
&lt;p>經常使用的 docker run 範本，所以導致本篇會持續更新的原因。&lt;/p>
&lt;h1 id="postgres">postgres&lt;/h1>
&lt;h2 id="好看版本">好看版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--restart always \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name dev-postgres \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 5432:5432 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-e POSTGRES_PASSWORD=postgres \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-v /home/user/dev-pg-data/pgdata:/var/lib/postgresql/data \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--network dev-network postgres:10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="複製版本">複製版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d --restart always --name dev-postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres -v /home/user/dev-pg-data/pgdata:/var/lib/postgresql/data --network dev-network postgres:10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="redis">redis&lt;/h1>
&lt;h2 id="好看版本-1">好看版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--restart always \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-p 6379:6379 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name dev-redis \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--network dev-network redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="複製版本-1">複製版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d --restart always -p 6379:6379 --name dev-redis --network dev-network redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="oracle-xe">oracle-xe&lt;/h1>
&lt;h2 id="好看版本-2">好看版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--restart always \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--name dev-oracle -p 1521:1521 \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-e ORACLE_PASSWORD=&amp;lt;your password&amp;gt; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-v oracle-volume:/u01/app/oracle/oradata gvenzl/oracle-xe:11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="複製版本-2">複製版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d --restart always --name dev-oracle -p 1521:1521 -e ORACLE_PASSWORD=&amp;lt;your password&amp;gt; -v oracle-volume:/u01/app/oracle/oradata gvenzl/oracle-xe:11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="nginx">nginx&lt;/h1>
&lt;p>待補&lt;/p></content></item><item><title>WSL2 紀錄 01 - 將 WSL2 指定 PORT 從 Windows 轉發出來</title><link>/p/wsl2-port-forwarding/</link><pubDate>Tue, 26 Jul 2022 15:27:00 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/wsl2-port-forwarding/</guid><description/><tags><tag>Windows</tag><tag>Port</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>後端 Django 使用 WSL2 建立，但是要讓同事連時，該怎麼處理?&lt;/p>
&lt;h1 id="處理方法">處理方法&lt;/h1>
&lt;h2 id="到-wsl2-查詢-ip">到 WSL2 查詢 IP&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">yen@DESKTOP-xxx:/mnt/c/.../$ ifconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">eth0: &lt;span class="nv">flags&lt;/span>&lt;span class="o">=&lt;/span>4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt; mtu &lt;span class="m">1500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 172.24.134.84 netmask 255.255.240.0 broadcast 172.24.143.255
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 fe80::215:5dff:fea3:d5d7 prefixlen &lt;span class="m">64&lt;/span> scopeid 0x20&amp;lt;link&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ether 00:15:5d:a3:d5:d7 txqueuelen &lt;span class="m">1000&lt;/span> &lt;span class="o">(&lt;/span>Ethernet&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX packets &lt;span class="m">43142&lt;/span> bytes &lt;span class="m">7192731&lt;/span> &lt;span class="o">(&lt;/span>7.1 MB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RX errors &lt;span class="m">0&lt;/span> dropped &lt;span class="m">2&lt;/span> overruns &lt;span class="m">0&lt;/span> frame &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX packets &lt;span class="m">1060&lt;/span> bytes &lt;span class="m">178104&lt;/span> &lt;span class="o">(&lt;/span>178.1 KB&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TX errors &lt;span class="m">0&lt;/span> dropped &lt;span class="m">0&lt;/span> overruns &lt;span class="m">0&lt;/span> carrier &lt;span class="m">0&lt;/span> collisions &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>關鍵是在 &lt;code>172.24.134.84&lt;/code>，要去記得 WSL2 的 IP 位置。&lt;/p>
&lt;p>這邊要記得 HOST 為 &lt;code>172.24.134.84&lt;/code>、PORT 為 &lt;code>9000&lt;/code>。(你要分享的 PORT)&lt;/p>
&lt;h2 id="到-windows">到 Windows&lt;/h2>
&lt;h3 id="轉發-wsl2-的連線位置">轉發 WSL2 的連線位置&lt;/h3>
&lt;p>以下是範例，進行複製的話，不要複製這個，去樣本複製：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">PS C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\x&lt;/span>xx&amp;gt; netsh interface portproxy add v4tov4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">listenport&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">9000&lt;/span> &lt;span class="nv">listenaddress&lt;/span>&lt;span class="o">=&lt;/span>0.0.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">connectport&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">9000&lt;/span> &lt;span class="nv">connectaddress&lt;/span>&lt;span class="o">=&lt;/span>172.24.134.84
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>說明：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>listenport=9000&lt;/p>
&lt;p>listenport 意思為我要讓別人連線的 PORT 是 9000。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>listenaddress=0.0.0.0&lt;/p>
&lt;p>listenaddress 意思為我要讓別人連線的 IP 是 0.0.0.0，就是指你現在 Windows 的 IP&lt;/p>
&lt;/li>
&lt;li>
&lt;p>connectport&lt;/p>
&lt;p>connectaddress 意思為被轉發的 PORT。&lt;code>填寫 WSL2 的 PORT&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>connectaddress&lt;/p>
&lt;p>connectaddress 意思為被轉發的 IP。&lt;code>填寫 WSL2 的 IP&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>以下是樣本，提供你複製：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">netsh interface portproxy add v4tov4 &lt;span class="nv">listenport&lt;/span>&lt;span class="o">=&lt;/span>xxxx &lt;span class="nv">listenaddress&lt;/span>&lt;span class="o">=&lt;/span>0.0.0.0 &lt;span class="nv">connectport&lt;/span>&lt;span class="o">=&lt;/span>xxxx &lt;span class="nv">connectaddress&lt;/span>&lt;span class="o">=&lt;/span>172.x.x.x
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用瀏覽器連線你的-ip">使用瀏覽器連線你的 IP&lt;/h2>
&lt;h3 id="查看自己-windows-的-ip">查看自己 Windows 的 IP&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">PS C:\Users\xxx&amp;gt; ipconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Windows IP 設定
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">乙太網路卡 乙太網路:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 連線特定 DNS 尾碼 . . . . . . . . :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 連結-本機 IPv6 位址 . . . . . . . : xxxxxxxxxxxxxxxxxxxxxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IPv4 位址 . . . . . . . . . . . . : 192.168.1.108
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 子網路遮罩 . . . . . . . . . . . .: 255.255.255.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 預設閘道 . . . . . . . . . . . . .: 192.168.1.254
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">....
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這邊可以知道我的 IP 是 &lt;code>192.168.1.108&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>連線到 &lt;a class="link" href="http://192.168.1.108:9000" target="_blank" rel="noopener"
>http://192.168.1.108:9000&lt;/a>&lt;/p>
&lt;h2 id="如何刪除剛剛新增的設定">如何刪除剛剛新增的設定&lt;/h2>
&lt;h3 id="查詢新增的-portproxy">查詢新增的 portproxy&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\x&lt;/span>xx&amp;gt; netsh interface portproxy show v4tov4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">接聽 ipv4: 連線到 ipv4:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">位址 連接埠 位址 連接埠
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------- ---------- --------------- ----------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0.0.0.0 &lt;span class="m">9000&lt;/span> 172.24.134.84 &lt;span class="m">9000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="刪除-portproxy">刪除 portproxy&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\x&lt;/span>xx&amp;gt; netsh interface portproxy delete v4tov4 &lt;span class="nv">listenport&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">9000&lt;/span> &lt;span class="nv">listenaddress&lt;/span>&lt;span class="o">=&lt;/span>0.0.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="確認-portproxy-是否刪除">確認 portproxy 是否刪除&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\x&lt;/span>xx&amp;gt; netsh interface portproxy show v4tov4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">沒顯示任何訊息就是沒有透過 portproxy 轉發的 port 了 !!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>完成囉！&lt;/p>
&lt;blockquote>
&lt;p>記得如果有將後端或其他應用分享出去時，記得要重新啟動！&lt;/p>
&lt;/blockquote>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/61002681/connecting-to-wsl2-server-via-local-network" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/61002681/connecting-to-wsl2-server-via-local-network&lt;/a>&lt;/p></content></item><item><title>Docker 紀錄 02 - 使用 oracleinanutshell/oracle-xe-11g 紀錄</title><link>/p/docker-oracle-xe-11g/</link><pubDate>Wed, 13 Jul 2022 10:36:26 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/docker-oracle-xe-11g/</guid><description/><tags><tag>Oracle</tag><tag>Database</tag><tag>Docker</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>主要紀錄建立 oracle-xe-11g 這個 image 的過程。&lt;/p>
&lt;h1 id="容器大小">容器大小&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">root@vm-1-47:/home/ubuntu# docker images
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">oracleinanutshell/oracle-xe-11g latest ad13c30ec346 &lt;span class="m">3&lt;/span> years ago 2.13GB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="操作">操作&lt;/h1>
&lt;h2 id="docker">docker&lt;/h2>
&lt;h3 id="docker-run">docker run&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d --name oracle-db -p 1521:1521 -e &lt;span class="nv">ORACLE_ALLOW_REMOTE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> oracleinanutshell/oracle-xe-11g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>說明：&lt;/p>
&lt;ol>
&lt;li>-d 為背景執行&lt;/li>
&lt;li>&amp;ndash;name
&lt;ul>
&lt;li>&lt;code>container-name&lt;/code>，把你的容器命名&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>-p 為 port 號
&lt;ul>
&lt;li>&lt;code>host-port:container-port&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>-e 為環境變數
&lt;ul>
&lt;li>&lt;code>ORACLE_ALLOW_REMOTE&lt;/code>，因為要建立在虛擬機上，要從其他電腦連過來。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="oracle">oracle&lt;/h2>
&lt;h3 id="docker-exec">docker exec&lt;/h3>
&lt;p>執行之前，我們要先查看我們 oracle-db 的 CONTAINER ID&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">root@vm-1-47:/home/ubuntu# docker ps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">18681d31f0ec oracleinanutshell/oracle-xe-11g &lt;span class="s2">&amp;#34;/bin/sh -c &amp;#39;/usr/sb…&amp;#34;&lt;/span> &lt;span class="m">3&lt;/span> seconds ago Up &lt;span class="m">1&lt;/span> second 22/tcp, 8080/tcp, 0.0.0.0:1521-&amp;gt;1521/tcp oracle-db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這時候後複製 &lt;code>18681d31f0ec&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">root@vm-1-47:/home/ubuntu# docker &lt;span class="nb">exec&lt;/span> -it 18681d31f0ec /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root@18681d31f0ec:/#
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="建立-oracle-user">建立 oracle user&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">root@18681d31f0ec:/# su - oracle
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">oracle@18681d31f0ec:~$ sqlplus / as sysdba
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SQL*Plus: Release 11.2.0.2.0 Production on Wed Jul &lt;span class="m">13&lt;/span> 03:04:33 &lt;span class="m">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Copyright &lt;span class="o">(&lt;/span>c&lt;span class="o">)&lt;/span> 1982, 2011, Oracle. All rights reserved.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Connected to:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SQL&amp;gt; create user yen identified by 0107&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User created.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SQL&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="授予-oracle-user-權限">授予 oracle user 權限&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">SQL&amp;gt; grant dba to yen&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Grant succeeded.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></item><item><title>Django 紀錄 01 - 將 Django App 程式碼轉成 Cython 來保護程式碼</title><link>/p/django-cython/</link><pubDate>Mon, 11 Jul 2022 17:31:45 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/django-cython/</guid><description>程式碼就不會脫光光給別人看 XD</description><tags><tag>Django</tag><tag>Python</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>主要就是將原始程式碼轉成暗碼，雖然能夠不讓自己的程式碼直接裸奔。&lt;/p>
&lt;p>但是若碰到有心人士也是一樣可以透過逆向工程把你的程式碼還原。&lt;/p>
&lt;p>提到明碼轉成暗碼，優先選擇 Cython 來執行，速度甚至可能變快(?)，實際上當然還沒測試，只是看到非常多人透過 Cython 讓自己 Python 程式碼變快 XD&lt;/p>
&lt;p>真是期待，但今天並不是來測試效能，而是優先將 Django-app 轉換成 so 檔執行 !!&lt;/p>
&lt;h1 id="操作">操作&lt;/h1>
&lt;p>可以參考 Reference 第一篇文章的程式碼來執行，但是我這邊主要也是整理一下我自己實作的部分提供參考。&lt;/p>
&lt;h2 id="操作環境">操作環境&lt;/h2>
&lt;p>使用 WSL2，要注意如果使用 Windows 進行 Cython，&lt;/p>
&lt;p>在執行上面有跑出問題，所以我是放棄了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">root@DESKTOP-xxx:/mnt/c/Users/xxx# lsb_release -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">No LSB modules are available.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Distributor ID: Ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Description: Ubuntu 18.04.6 LTS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Release: 18.04
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Codename: bionic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="資料夾架構">資料夾架構&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">root@DESKTOP-xxx:/core$ tree -L &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── apps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── app1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── admin.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── apps.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── functions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── migrations
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── models.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── tests.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── urls.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── views.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_clear.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_py_to_so.py &lt;span class="c1"># 本文主角&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── core
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── asgi.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── settings.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── urls.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── variables.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── wsgi.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── debug.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── manage.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── run_venv.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── templates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中最重要的就是 &lt;code>build_py_to_so.py&lt;/code> 這支檔案，待會會將程式碼貼在本文。&lt;/p>
&lt;p>另外為了防止疑惑，以下說明其他資料夾的內容&lt;/p>
&lt;ul>
&lt;li>關於 Django
&lt;ul>
&lt;li>core - 為 django project 主要資料夾&lt;/li>
&lt;li>apps - 為 django app 生成的位置，如果建立在主目錄會非常亂&lt;/li>
&lt;li>logs - 儲存 log 檔的資料夾&lt;/li>
&lt;li>templates - 儲存 html 檔的資料夾&lt;/li>
&lt;li>manage.py - django 預設&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>關於 Python
&lt;ul>
&lt;li>venv - 虛擬環境&lt;/li>
&lt;li>requirements.txt - pip freeze, 為需要用的的套件&lt;/li>
&lt;li>build_clear.py - 自動清理 &lt;code>.py&lt;/code>、&lt;code>.c&lt;/code> 檔案，建議參考 Reference 第一篇文章
&lt;ul>
&lt;li>程式碼連結：&lt;a class="link" href="https://gist.github.com/CHunYenc/adcdd234aab33d621fdfa127e41ee16a" target="_blank" rel="noopener"
>https://gist.github.com/CHunYenc/adcdd234aab33d621fdfa127e41ee16a&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其他
&lt;ul>
&lt;li>run_venv.sh&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="如何將-app-從-py-轉為-cython">如何將 APP 從 py 轉為 cython&lt;/h2>
&lt;h3 id="build_py_to_sopy">build_py_to_so.py&lt;/h3>
&lt;h3 id="導入套件">導入套件&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">distutils.core&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">distutils.extension&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Extension&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">Cython.Build&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">cythonize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">Cython.Distutils&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">build_ext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">Cython.Compiler&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面是使用到的套件，非常簡單，大部分都是 import Cython 套件。&lt;/p>
&lt;h3 id="取得-app-路徑">取得 app 路徑&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># app 的資料夾名稱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;app1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># app 使用 function 資料夾架構&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">functions_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;functions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 取得 app1 資料夾路徑&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app_folder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getcwd&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s1">&amp;#39;apps&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">app_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 取得 app1/functions/*.py &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app_folder&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;functions&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s1">&amp;#39;*.py&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 取得 app1/*.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app_folder&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;*.py&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面是取得資料夾的一些路徑，如果你有非常多的 app 要把程式碼轉為 cython，&lt;/p>
&lt;p>那也可以將你的 apps 使用 &lt;code>os.path.join&lt;/code>，路徑的話應該會是 &lt;code>apps/**/*.py&lt;/code>。&lt;/p>
&lt;p>注意：&lt;code>app1/migrations/&lt;/code>，在執行的時候無法使用 Cython ， 會出錯誤。&lt;/p>
&lt;p>注意：&lt;code>app1/migrations/&lt;/code>，在執行的時候無法使用 Cython ， 會出錯誤。&lt;/p>
&lt;p>注意：&lt;code>app1/migrations/&lt;/code>，在執行的時候無法使用 Cython ， 會出錯誤。&lt;/p>
&lt;blockquote>
&lt;p>若你解決了，可以再留言跟我分享，你的方式。&lt;/p>
&lt;/blockquote>
&lt;h3 id="主要程式碼">主要程式碼&lt;/h3>
&lt;p>這邊如果你是參考 Reference 第一篇文章的話，他是沒有第 3 行迴圈的部分，&lt;/p>
&lt;p>這邊我主要是忽略 &lt;code>app1/migrations/&lt;/code> 資料夾產生的錯誤。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">to_so&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">format_folder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">app_file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">function_file&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">format_folder&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ext_modules&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">Extension&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setup&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;py to so&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cmdclass&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;build_ext&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">build_ext&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ext_modules&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">cythonize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ext_modules&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">language_level&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="n">Cython&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Compiler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Errors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CompileError&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 獲取檔名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">filename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;autopep8 --in-place --aggressive --aggressive &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getcwd&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">filename&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 繼續轉換&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_so&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">to_so&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下來，我們要執行這支程式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">root@DESKTOP-xxx:/core# &lt;span class="nb">source&lt;/span> /venv/bin/activate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> root@DESKTOP-xxx:/core# python build_py_to_so.py build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這時發現 &lt;code>app1&lt;/code> 資料夾內副檔名為 &lt;code>.c&lt;/code> 的檔案。另外也會產出一個 &lt;code>build&lt;/code> 資料夾。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> root@DESKTOP-xxx:/core# tree -L &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── apps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── app1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── functions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── migrations
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── .... 檔案太多, 吃掉 ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── views.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── views.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── lib.linux-x86_64-3.7 &lt;span class="c1"># 主要 django app 程式碼都在此處&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── connect.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── app1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ ├── __init__.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ ├── admin.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ ├── apps.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ ├── models.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ ├── tests.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ ├── urls.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ │ └── views.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── format.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── temp.linux-x86_64-3.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── mnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_clear.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_py_to_so.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣我們就把 python 轉成 cython 檔案囉！&lt;/p>
&lt;p>但我們如果要將程式碼交給客戶時，只要將 so 檔案，放入原本的資料夾內，&lt;/p>
&lt;p>python 也會優先執行 cython 的檔案唷 !!!&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> root@DESKTOP-xxx:/core# tree -L &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── apps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── app1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── .... 檔案太多, 吃掉 ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── views.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── views.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── views.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── lib.linux-x86_64-3.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── temp.linux-x86_64-3.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_clear.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_py_to_so.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這時候，我們就完成將 python 轉成 cython 程式碼囉 !!!&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> root@DESKTOP-xxx:/core# tree -L &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── apps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── app1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── .... 檔案太多, 吃掉 ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── urls.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── views.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_clear.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── build_py_to_so.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── venv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>改成上面只剩下 &lt;code>app1&lt;/code> 的資料夾底下只有 &lt;code>.so&lt;/code> 檔的方式，沒意外的話也要能夠執行喔 !!&lt;/p>
&lt;h3 id="執行結果">執行結果&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> root@DESKTOP-xxx:/core/apps# tree -L &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── app1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── __init__.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── __pycache__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── admin.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── apps.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── functions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── migrations
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── models.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── tests.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── urls.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── views.cpython-37m-x86_64-linux-gnu.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">4&lt;/span> directories, &lt;span class="m">7&lt;/span> files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>venv&lt;span class="o">)&lt;/span> root@DESKTOP-xxx:/core/apps# python ../manage.py runserver 0.0.0.0:8555
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2022-07-12 08:28:46 - autoreload.py -&amp;gt; run_with_reloader&lt;span class="o">()&lt;/span> : Watching &lt;span class="k">for&lt;/span> file changes with StatReloader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Performing system checks...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">System check identified no issues &lt;span class="o">(&lt;/span>&lt;span class="m">0&lt;/span> silenced&lt;span class="o">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">July 12, &lt;span class="m">2022&lt;/span> - 08:28:46
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Django version 3.2.13, using settings &lt;span class="s1">&amp;#39;core.settings&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Starting development server at http://0.0.0.0:8555/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Quit the server with CONTROL-C.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="/result.png"
loading="lazy"
alt="執行結果, 我的 index XD"
>&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;ol>
&lt;li>&lt;a class="link" href="https://imshanks.com/2019/08/03/converting-django-project-py-file-to-so-file.html" target="_blank" rel="noopener"
>https://imshanks.com/2019/08/03/converting-django-project-py-file-to-so-file.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cython.readthedocs.io/en/latest/" target="_blank" rel="noopener"
>https://cython.readthedocs.io/en/latest/&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gist.github.com/CHunYenc/adcdd234aab33d621fdfa127e41ee16a" target="_blank" rel="noopener"
>https://gist.github.com/CHunYenc/adcdd234aab33d621fdfa127e41ee16a&lt;/a>&lt;/li>
&lt;/ol></content></item><item><title>GIT 小撇步 01 - 教你找回尚未 commit 且遺失的檔案</title><link>/p/git-find-out-not-commit-files/</link><pubDate>Wed, 06 Jul 2022 17:59:19 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/git-find-out-not-commit-files/</guid><description>紀錄一下 git add 後 沒有 commit, 找回 add 的檔案.</description><tags><tag>GIT</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>有一天下午，把某項任務完成後，就下指令 &lt;code>git add&lt;/code>&lt;/p>
&lt;p>然後沒有 &lt;code>git commit&lt;/code> &amp;hellip; (更不用說 &lt;code>git push&lt;/code>)&lt;/p>
&lt;p>總之就在整理前後端版本對應的問題，然後就直接 &lt;code>git checkout -f master&lt;/code> 跳去 master，主要是覆蓋版本，因為主分支已經很久沒有上新版了。&lt;/p>
&lt;p>最後 &amp;hellip; 前端的程式碼被我弄丟了 !&lt;/p>
&lt;h1 id="解法">解法&lt;/h1>
&lt;h2 id="git-fsck">git fsck&lt;/h2>
&lt;p>有看到一個 十年前的文章 (今天是 2022/07/07)&lt;/p>
&lt;p>連結：&lt;a class="link" href="http://blog.hsatac.net/2012/07/git-restore-removed-files/" target="_blank" rel="noopener"
>http://blog.hsatac.net/2012/07/git-restore-removed-files/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">PS C:\code\frontend&amp;gt; git fsck --cache --unreachable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Checking object directories: 100% (256/256), done.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Checking objects: 100% (2592/2592), done.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">unreachable blob 7fc292a549c604ee4219b2e0db9383b32f3ce152
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">unreachable blob 05037508dd7dda94f5fb422a7867471247283403
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">unreachable blob 7c83ff9c66bf28827bd0fbb2aa5e377e460829fe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">... 底下還有很多
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下來每行 &lt;code>blob 7fc292a549c604ee4219b2e0db9383b32f3ce152&lt;/code> 都是你之前尚未 commit 的檔案。(不是很確定&lt;/p>
&lt;h2 id="git-show">git show&lt;/h2>
&lt;p>接下來就是每一行的看檔案了 &amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git show 7fc292a549c604ee4219b2e0db9383b32f3ce152 &amp;gt; temp.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下來你的 &lt;code>C:\code\frontend&lt;/code> (這是我的位置)&lt;/p>
&lt;p>就會看到有一個 &lt;code>temp.txt&lt;/code>&lt;/p>
&lt;p>基本上就是檔案回來囉 !&lt;/p>
&lt;p>希望對您有幫助 !&lt;/p>
&lt;h1 id="完成">完成&lt;/h1></content></item><item><title>Docker 紀錄 01 - 2022 使用 Docker 建立 Oracle Database</title><link>/p/docker-pull-oracle-database-image/</link><pubDate>Wed, 29 Jun 2022 13:31:59 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/docker-pull-oracle-database-image/</guid><description>2021 去年使用的方式又跟今年(2022) 不一樣了 ..</description><tags><tag>Oracle</tag><tag>Database</tag><tag>Docker</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>之前的我都是去 docker hub pull,&lt;/p>
&lt;p>但是今天發現 docker pull 的方式不一樣了。&lt;/p>
&lt;h1 id="直接寫解法">直接寫解法&lt;/h1>
&lt;h2 id="前往-oracle-container-註冊">前往 oracle container 註冊&lt;/h2>
&lt;pre>&lt;code>https://container-registry.oracle.com
&lt;/code>&lt;/pre>
&lt;h2 id="登入完後點擊-database">登入完後，點擊 Database&lt;/h2>
&lt;p>&lt;img src="/images/20220629/oracle-01.png"
loading="lazy"
alt="2022/07/06 - Oracle UI"
>&lt;/p>
&lt;h2 id="同意授權">同意授權&lt;/h2>
&lt;p>&lt;img src="/images/20220629/oracle-02.png"
loading="lazy"
alt="2022/07/06 - Oracle 同意授權與未同意授權的畫面"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">請記得要點擊 Continue.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="授權">授權&lt;/h2>
&lt;p>&lt;img src="/images/20220629/oracle-01.png"
loading="lazy"
alt="2022/07/06 - Oracle 點擊同意授權"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">顯示打勾之後，再繼續下面的操作。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="docker-login">docker login&lt;/h2>
&lt;p>看你的環境是什麼，我今天使用的公司電腦，所以以下使用 Windows 的 PowerShell。&lt;/p>
&lt;p>注意：這邊的話會叫你輸入登入資訊，但是因為我已經登入過了。&lt;/p>
&lt;p>注意：這邊的話會叫你輸入登入資訊，但是因為我已經登入過了。&lt;/p>
&lt;p>注意：這邊的話會叫你輸入登入資訊，但是因為我已經登入過了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">PS D:\&amp;gt; docker login container-registry.oracle.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Authenticating with existing credentials...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Login Succeeded
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這時候就可以下載 container-registry.oracle.com 的 images ，&lt;/p>
&lt;p>你可以先 COPY 下面的指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run -d --name oracle-db container-registry.oracle.com/database/enterprise:21.3.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這邊是測試，使用 docker run 來下載 container-registry.oracle.com 的 image.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">PS D:\&amp;gt; docker run -d --name oracle-db container-registry.oracle.com/database/enterprise:21.3.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Unable to find image &amp;#39;container-registry.oracle.com/database/enterprise:21.3.0.0&amp;#39; locally
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">21.3.0.0: Pulling from database/enterprise
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">401a42e1eb4f: Pulling fs layer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a13a3f09d2fa: Pulling fs layer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a55a58a3063b: Pulling fs layer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d6422a9150b2: Pulling fs layer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">..... 以下太多資訊 省略
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="完成">完成&lt;/h2></content></item><item><title>JenKins 架設紀錄 01 - 使用 Docker 架設 Jenkins 並第一次使用</title><link>/p/jenkins-01-deploy/</link><pubDate>Sun, 10 Apr 2022 19:03:00 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/jenkins-01-deploy/</guid><description>主要是指令與如何使用 Docker + Jenkins 並印出 「Hello Jenkins」</description><tags><tag>Jenkins</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="環境">環境&lt;/h1>
&lt;p>趁這次假日架設了 Jenkins，但是目前為止 M1 處理器皆不支援。&lt;/p>
&lt;p>所以用在學生時期使用的 Oracle Cloud 建立一台虛擬機，以下都可以適用在任何雲端平台來操作。&lt;/p>
&lt;h2 id="ubuntu-版本">Ubuntu 版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># lsb_release -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">No LSB modules are available.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Distributor ID: Ubuntu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Description: Ubuntu 18.04.6 LTS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Release: 18.04
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Codename: bionic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="docker-版本">Docker 版本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># docker -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Docker version 20.10.14, build a224086
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="操作">操作&lt;/h1>
&lt;p>&lt;a class="link" href="https://github.com/jenkinsci/docker/blob/master/README.md" target="_blank" rel="noopener"
>README 官方閱讀手冊&lt;/a>&lt;/p>
&lt;p>以下皆是參考上面的連結，很重要&lt;/p>
&lt;h2 id="開始">開始&lt;/h2>
&lt;p>切記這邊不能使用 &lt;code>-d&lt;/code> 指令，否則會影響到第一次啟動密碼&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run --name jenkins -p 8080:8080 -p 50000:50000 --restart always jenkins/jenkins:lts-jdk11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>執行後，會顯示下面的資訊，密碼就是第一次啟動 Jenkins 在用的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">... logging ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Jenkins initial setup is required. An admin user has been created and a password generated.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Please use the following password to proceed to installation:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">61e8c8cb00c0417bb4c4719ba8559060
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">This may also be found at: /var/jenkins_home/secrets/initialAdminPassword
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*************************************************************
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>先複製 &lt;code>61e8c8cb00c0417bb4c4719ba8559060&lt;/code>&lt;/p>
&lt;p>如果不小心加上 &lt;code>-d&lt;/code> 後，該怎麼辦 ?&lt;/p>
&lt;p>可以參考 &lt;a class="link" href="#%e5%82%99%e8%a8%bb" >備註&lt;/a>&lt;/p>
&lt;h2 id="前往網頁">前往網頁&lt;/h2>
&lt;p>&lt;img src="/images/20220410/00-wait.png"
loading="lazy"
alt="等待 Jenkins 上工"
>&lt;/p>
&lt;p>&lt;img src="/images/20220410/01-Unlock.png"
loading="lazy"
alt="進入 JenKins 的第一個畫面"
>&lt;/p>
&lt;p>就把 &lt;code>61e8c8cb00c0417bb4c4719ba8559060&lt;/code> 貼進去裡面就完成啟用囉 !&lt;/p>
&lt;h2 id="不安裝任何插件">不安裝任何插件&lt;/h2>
&lt;p>直接點擊右上角 x, 到時候我們再一項一項安裝.&lt;/p>
&lt;p>&lt;img src="/images/20220410/02-plugin.png"
loading="lazy"
alt="點擊右上角 x 進行下一步"
>&lt;/p>
&lt;h2 id="進入首頁">進入首頁&lt;/h2>
&lt;p>&lt;img src="/images/20220410/03-home.png"
loading="lazy"
alt="Jenkins 首頁"
>&lt;/p>
&lt;h2 id="更改-admin-密碼">更改 admin 密碼&lt;/h2>
&lt;p>&lt;img src="/images/20220410/04-change_password.png"
loading="lazy"
alt="更改 admin 登入密碼"
>&lt;/p>
&lt;h2 id="建立一個-work">建立一個 work&lt;/h2>
&lt;p>&lt;img src="/images/20220410/05-create-work.png"
loading="lazy"
alt="點擊左上角，新增作業"
>&lt;/p>
&lt;h2 id="hello-jenkins">Hello Jenkins&lt;/h2>
&lt;p>&lt;img src="/images/20220410/06-create-hello-jenkins.png"
loading="lazy"
alt="創建一個作業"
>&lt;/p>
&lt;p>這邊可以直接按「OK」。&lt;/p>
&lt;h2 id="加入一個-echo-shell">加入一個 echo shell&lt;/h2>
&lt;p>&lt;img src="/images/20220410/07-create-shell.jpeg"
loading="lazy"
alt="選取 執行 Shell"
>&lt;/p>
&lt;p>畢竟本篇是要執行一個 echo 「Hello World」。&lt;/p>
&lt;p>所以我們還是先照做，此篇只是第一篇的 jenkins XD&lt;/p>
&lt;p>&lt;img src="/images/20220410/08-echo.jpg"
loading="lazy"
alt="打上 echo Hello Jenkins"
>&lt;/p>
&lt;p>點擊儲存。&lt;/p>
&lt;h2 id="執行我們建立的作業-hello-jenkins">執行我們建立的作業 Hello Jenkins&lt;/h2>
&lt;p>&lt;img src="/images/20220410/09-dashboard.jpg"
loading="lazy"
alt="回到 Dashboard"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">點擊我們 Hello Jenkins 作業做右邊的執行鈕
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">重整頁面 (F5)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">接者會發現「上次執行成功時間」、「上次建置花費時間」已經有數值，不會像圖片上顯示「無」
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我們現在去看看我們執行的結果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">點擊「Hello Jenkins」名稱，進入頁面後。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">目光移到「左下角」的「建置歷程」
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="/images/20220410/11-task-history.png"
loading="lazy"
alt="建置歷程"
>&lt;/p>
&lt;p>這邊我點擊 #1 來看看我們，剛剛的 Hello Jenkins 有沒有執行出來 !!&lt;/p>
&lt;p>&lt;img src="/images/20220410/10-success-task.png"
loading="lazy"
alt="建置的結果"
>&lt;/p>
&lt;p>這邊只是大致上介紹一下，Jenkins 可以協助你啟動任何的任務，不只是 Shell.&lt;/p>
&lt;p>未來我還會再增加一些 Jenkins 的範例，希望這篇有幫助到你 !&lt;/p>
&lt;h1 id="結束今天我們就將-jenkins-架設完成囉">結束，今天我們就將 Jenkins 架設完成囉&lt;/h1>
&lt;h1 id="備註---沒有密碼時的步驟">備註 - 沒有密碼時的步驟&lt;/h1>
&lt;h2 id="查看-docker-目前執行的-container">查看 docker 目前執行的 container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># docker ps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d9146583cb09 jenkins/jenkins:lts-jdk11 &amp;#34;/sbin/tini -- /usr/…&amp;#34; 4 minutes ago Up 34 seconds 0.0.0.0:8080-&amp;gt;8080/tcp, :::8080-&amp;gt;8080/tcp, 0.0.0.0:50000-&amp;gt;50000/tcp, :::50000-&amp;gt;50000/tcp jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="進入-container">進入 container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># docker exec -it d9146583cb09 /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jenkins@d9146583cb09:/$ cat /var/jenkins_home/secrets/initialAdminPassword
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">61e8c8cb00c0417bb4c4719ba8559060
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下來就可以看到密碼囉， &lt;code>61e8c8cb00c0417bb4c4719ba8559060&lt;/code>&lt;/p></content></item><item><title>我的第一篇 HUGO 架設 BLOG 經驗分享</title><link>/p/hugo-blog-online/</link><pubDate>Sat, 26 Mar 2022 20:46:00 +0800</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/hugo-blog-online/</guid><description>沒什麼描述，就是講講這個部落格的產生原因</description><tags><tag>Hugo</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h1 id="更換成-hugo-的原因">更換成 Hugo 的原因&lt;/h1>
&lt;p>自己本身是有使用 Blogger，主要認為有下面幾個問題。&lt;/p>
&lt;ol>
&lt;li>垃圾留言&lt;/li>
&lt;li>介面很醜&lt;/li>
&lt;li>發文介面使用不易
&lt;ul>
&lt;li>每次發文之後都會跑版，所以果斷使用一個自己架設的。&lt;/li>
&lt;li>不想一直預覽切來切去。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>不能使用 markdown 方式來撰寫你想要的文章 ***&lt;/li>
&lt;/ol>
&lt;h1 id="更換過程">更換過程&lt;/h1>
&lt;p>我認為官方的文件講得很清楚，我也是照者下面的連結馬上建立一個 quickstart 資料夾。&lt;/p>
&lt;p>&lt;a class="link" href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener"
>https://gohugo.io/getting-started/quick-start/&lt;/a>&lt;/p>
&lt;p>然後使用一個官方預設的 Theme (佈景主題?)&lt;/p>
&lt;p>但我自己設定時候講想說「好醜」、「這什麼鬼主題」XD&lt;/p>
&lt;p>所以現在看到的這個主題呢，是從官方(下面連結)找到的。&lt;/p>
&lt;p>&lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>https://themes.gohugo.io/&lt;/a>&lt;/p>
&lt;h1 id="我選的背景主題">我選的背景主題&lt;/h1>
&lt;p>&lt;a class="link" href="https://themes.gohugo.io/themes/hugo-theme-stack/" target="_blank" rel="noopener"
>https://themes.gohugo.io/themes/hugo-theme-stack/&lt;/a>&lt;/p>
&lt;p>底下有中文文檔，不過我還是中英文互相看，英文的文件我認為比較新。&lt;/p>
&lt;p>建議可以直接看英文啦，反正就看一下 &lt;code>config.yml&lt;/code> 怎麼設定。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">config.yml 底下有檔案連結可以過去參考看看。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="架設環境">架設環境&lt;/h1>
&lt;p>主要有三個地方需要注意，以下是說明。&lt;/p>
&lt;p>Reference 都有我參考的文章，關於 Reference 第 2 點的參考文章建立的 main.yml 是無法執行的。(我的 branch(gh-pages) 一直沒有建立出 HTML)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>.github/workflows/main.yml&lt;/p>
&lt;ul>
&lt;li>檔案連結： &lt;a class="link" href="https://github.com/CHunYenc/chunyenc.github.io/blob/f9482b47d8c1e19b6015df92ba0c9007ff7631bc/.github/workflows/main.yml" target="_blank" rel="noopener"
>https://github.com/CHunYenc/chunyenc.github.io/blob/f9482b47d8c1e19b6015df92ba0c9007ff7631bc/.github/workflows/main.yml&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>config.yml&lt;/p>
&lt;ul>
&lt;li>檔案連結： &lt;a class="link" href="https://github.com/CHunYenc/chunyenc.github.io/blob/f9482b47d8c1e19b6015df92ba0c9007ff7631bc/config.yml" target="_blank" rel="noopener"
>https://github.com/CHunYenc/chunyenc.github.io/blob/f9482b47d8c1e19b6015df92ba0c9007ff7631bc/config.yml&lt;/a>&lt;/li>
&lt;li>在 config.yml 加入 publishDir: docs, 可以讓你每次下 &lt;code>hugo -t stack&lt;/code> 都能夠生成 HTML 檔案到 docs 資料夾, 預設是到 public 資料夾&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>docs/&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">如果你有看到 Reference 第 1 點的參考文章使用兩個 repository,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">一個是主要去紀錄尚未生成的檔案,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">一個是生成的靜態檔案(就是指 HTML 放的位置)。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">但是我不用，我只需要一個 repository !!!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以下是我準備將網站上線的過程，但是要注意你的上面前兩點都已經設定好 💪&lt;/p>
&lt;p>👉 請確定已經將文章內容打好並且儲存後再執行&lt;/p>
&lt;p>👉 請確定已經將文章內容打好並且儲存後再執行。&lt;/p>
&lt;p>👉 請確定已經將文章內容打好並且儲存後再執行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hugo -t stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 這時候會發現我們的 docs 資料夾內會有很多靜態檔案
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &amp;#34;feat: ...&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣你等一下就可以在你的網頁上看到了！&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;ol>
&lt;li>&lt;a class="link" href="https://medium.com/@chswei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40" target="_blank" rel="noopener"
>https://medium.com/@chswei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://yurepo.tw/2021/03/%E5%A6%82%E4%BD%95%E5%B0%87hugo%E9%83%A8%E8%90%BD%E6%A0%BC%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A/" target="_blank" rel="noopener"
>https://yurepo.tw/2021/03/%E5%A6%82%E4%BD%95%E5%B0%87hugo%E9%83%A8%E8%90%BD%E6%A0%BC%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A/&lt;/a>&lt;/li>
&lt;/ol></content></item><item><title>ZYXEL NBG6604 Access Point Model 使用基地台模式連接到管理員/設定頁面</title><link>/p/zyxel-nbg6604-access-point-model-connect-to-admin-page/</link><pubDate>Sat, 27 Nov 2021 14:22:00 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/zyxel-nbg6604-access-point-model-connect-to-admin-page/</guid><description/><tags><tag>Network</tag><tag>ZYXEL</tag><tag>NBG6604</tag><tag>Access-Point-Model</tag><tag>AP-Model</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h2 id="說明">說明&lt;/h2>
&lt;p>不廢話，先說明一下為什麼會碰到這個問題，實際原因不太了解。真的對網路只是微懂。&lt;/p>
&lt;p>而本篇主要是記錄這問題是如何解決的，並從哪裡得到這些資訊及解決方式。&lt;/p>
&lt;p>機型：ZYXEL NBG6604&lt;/p>
&lt;h2 id="原因">原因&lt;/h2>
&lt;p>主要是因為在設定家裡網路時，發現抓不到網路印表機，&lt;/p>
&lt;p>因為印表機在不同網域底下（直插光纖小烏龜）目前則是無法達到讓 WIFI 能夠列印，&lt;/p>
&lt;p>所以將分享器從「路由器模式」切換成「基地台模式」。&lt;/p>
&lt;p>但是這邊發生一點小插曲，就是更改成「基地台模式（Access Point Model）」，&lt;/p>
&lt;p>我無法使用 &lt;a class="link" href="http://myrouter" target="_blank" rel="noopener"
>http://myrouter&lt;/a> 進入管理員頁面。&lt;/p>
&lt;p>這個時候只要用網路線/WIFI的方式連線上分享器，使用電腦更改連線IP，以下為我的設定&lt;/p>
&lt;p>&lt;img src="/images/blogger/20211127_zyxel-ngb6604/01.setting-static-ip.png"
loading="lazy"
alt="設定固定 IP"
>&lt;/p>
&lt;p>IP（IP Address）：192.168.1.254&lt;/p>
&lt;p>子網路遮罩（Subnet mask）：255.255.255.0&lt;/p>
&lt;p>路由器（Default Gateway）：192.168.1.2&lt;/p>
&lt;p>Gateway 的 IP 在更改 AP模式（Access Point Model） 時有跳出來，請記錄下來。&lt;/p>
&lt;p>大致上這樣連線 &lt;a class="link" href="http://192.168.1.2" target="_blank" rel="noopener"
>http://192.168.1.2&lt;/a> 既可以進入到設定頁面了！&lt;/p>
&lt;p>&lt;img src="/images/blogger/20211127_zyxel-ngb6604/02.connect-to-wifi-router.png"
loading="lazy"
alt="進入 WIFI Router 設定頁面"
>&lt;/p>
&lt;p>參考影片：&lt;a class="link" href="https://www.youtube.com/watch?v=4WDxZMQChCQ" target="_blank" rel="noopener"
>ACCESS POINT Mode on ZyXEL Wireless router | NETVN - YouTube&lt;/a>&lt;/p></content></item><item><title>【Docker】Macbook Air M1 CPU 使用 Docker 建立 SQL Server</title><link>/p/macbook-air-m1-install-sql-server/</link><pubDate>Sat, 07 Aug 2021 21:10:00 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/macbook-air-m1-install-sql-server/</guid><description/><tags><tag>SQLServer</tag><tag>Docker</tag></tags><categories><category>Experience</category></categories><image><url>/</url></image><content>&lt;p>圖片來源：&lt;a class="link" href="https://zh.wikipedia.org/wiki/Microsoft_SQL_Server" target="_blank" rel="noopener"
>https://zh.wikipedia.org/wiki/Microsoft_SQL_Server&lt;/a>&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>說明一下為什麼會使用到 SQL Server + Macbook Air。&lt;/p>
&lt;p>主要是在今年 (2021) 年初買了 Macbook Air M1。&lt;/p>
&lt;p>那過了近半年，在目前工作的專案下，對方有提出一個需求就是需要導入 SQL Server，&lt;/p>
&lt;p>就想說試試看 M1 是否可以建立 SQL Server 的環境。&lt;/p>
&lt;h2 id="本文章分為四段">本文章分為四段&lt;/h2>
&lt;ul>
&lt;li>檢查您的電腦是否有安裝 Docker&lt;/li>
&lt;li>Docker run&lt;/li>
&lt;li>使用 dbeaver 開源資料庫管理工具連線 SQL Server Container&lt;/li>
&lt;li>結束&lt;/li>
&lt;/ul>
&lt;h2 id="本文開始">本文開始&lt;/h2>
&lt;h3 id="檢查是否安裝-docker">檢查是否安裝 Docker&lt;/h3>
&lt;p>合理來說 Macbook Pro 一樣可以參考下面範例，若不行，希望你能留言告訴大家&lt;/p>
&lt;p>首先當然先確認電腦是否有安裝 Docker，這邊顯示一下我目前 Docker 的版本&lt;/p>
&lt;p>指令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Docker -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="/images/blogger/20210807_m1-sqlserver/01.docker-version.png"
loading="lazy"
alt="Docker 版本"
>&lt;/p>
&lt;p>未安裝的話這邊提供一下 Docker 官方網站：&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener"
>https://docs.docker.com/docker-for-mac/install/&lt;/a>&lt;/p>
&lt;p>暫時不提供安裝教學，官方也寫得非常清楚。&lt;/p>
&lt;h3 id="docker-run">Docker run&lt;/h3>
&lt;p>這邊其實當初也找了非常多，最後在&lt;/p>
&lt;p>&lt;a class="link" href="https://medium.com/geekculture/docker-express-running-a-local-sql-server-on-your-m1-mac-8bbc22c49dc9" target="_blank" rel="noopener"
>https://medium.com/geekculture/docker-express-running-a-local-sql-server-on-your-m1-mac-8bbc22c49dc9&lt;/a>&lt;/p>
&lt;p>這篇有發現如何在 M1 安裝 SQL Server，其中他有 Highlight 這一段：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -e &lt;span class="s2">&amp;#34;ACCEPT_EULA=1&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;MSSQL_SA_PASSWORD=MyPass@word&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;MSSQL_PID=Developer&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;MSSQL_USER=SA&amp;#34;&lt;/span> -p 1433:1433 -d --name&lt;span class="o">=&lt;/span>sql mcr.microsoft.com/azure-sql-edge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你如果對 Docker 不是很熟的話，這邊稍微介紹一下當中的用法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>docker run&lt;/code>：建立一個 container，而 run 後面的意思下面會依序介紹：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-e&lt;/code>：設定環境變數，這邊設定了四個。(環境變數可以參考微軟官方）：
&lt;a class="link" href="https://docs.microsoft.com/zh-tw/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-ver15" target="_blank" rel="noopener"
>https://docs.microsoft.com/zh-tw/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-ver15&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ACCEPT_EULA&lt;/code>：使用者授權&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MSSQL_SA_PASSWORD&lt;/code>：SA 資料庫密碼&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MSSQL_PID&lt;/code>：設定 SQL Server 版本或產品金鑰，請參考上面官方連結&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>MSSQL_USER&lt;/code>：使用者名稱&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-p 1433:1433&lt;/code>：這邊指的是 host 1433 port 就是等於這個 Container 1433 port
(host:container 的意思)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-d&lt;/code>：背景執行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>--name&lt;/code>：container 的名稱，這邊設定 sql&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mcr.microsoft.com/azure-sql-edge&lt;/code>：就是我們要建立的 image&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>以上是指令的介紹，那我再分享一下我的 dock run 的指令好了，來一個範例版。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -e &lt;span class="s2">&amp;#34;ACCEPT_EULA=1&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;MSSQL_SA_PASSWORD=20210807Chunyen&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;MSSQL_PID=Developer&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;MSSQL_USER=SA&amp;#34;&lt;/span> -p 1433:1433 --name&lt;span class="o">=&lt;/span>sqlserver mcr.microsoft.com/azure-sql-edge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這邊我更動了兩個環境配置。&lt;/p>
&lt;ul>
&lt;li>移除 &lt;code>-d&lt;/code>：我先看看我們的設定是否有問題，因為密碼不能太簡單&lt;/li>
&lt;li>更改 &lt;code>MSSQL_SA_PASSWORD&lt;/code>：設定成自己想要的密碼&lt;/li>
&lt;/ul>
&lt;p>首次安裝他需要安裝 image，這邊我們等他一下。&lt;/p>
&lt;p>&lt;img src="/images/blogger/20210807_m1-sqlserver/03.docker-install-image-finish.png"
loading="lazy"
alt="安裝 sql-server image"
>&lt;/p>
&lt;p>正在下載 image &amp;ldquo;mcr.microsoft.com/azure-sql-edge&amp;rdquo;&lt;/p>
&lt;p>安裝完後，因為我們是直接 docker run，不是 docker pull。&lt;/p>
&lt;p>Docker pull 的指令為下載 image，詳細可以 Google，這邊不介紹此指令。&lt;/p>
&lt;p>&lt;img src="/images/blogger/20210807_m1-sqlserver/03.docker-install-image-finish.png"
loading="lazy"
alt="sql-server 安裝完成"
>&lt;/p>
&lt;p>接下來出現這個畫面後，沒有跑出任何 Error，我們就可以打開 &lt;code>dbeaver&lt;/code> (開源資料庫管理工具)&lt;/p>
&lt;h3 id="使用-dbeaver-開源資料庫管理工具連線-sql-server-container">使用 dbeaver 開源資料庫管理工具連線 SQL Server Container&lt;/h3>
&lt;p>這邊就不展示如何安裝 dbeaver。&lt;/p>
&lt;p>首先我們先打開 dbeaver，如下圖進行新增連線&lt;/p>
&lt;p>&lt;img src="/images/blogger/20210807_m1-sqlserver/04.dbeaver-connect-db.png"
loading="lazy"
alt="dbeaver 建立連線"
>&lt;/p>
&lt;p>dbeaver 建立連線&lt;/p>
&lt;p>建立連線後點擊 Next，輸入連線資訊。&lt;/p>
&lt;p>&lt;img src="/images/blogger/20210807_m1-sqlserver/05.dbeaver-setting-connect-information.png"
loading="lazy"
alt="dbeaver 設定連線資訊"
>&lt;/p>
&lt;p>dbeaver 連線 SQL Server&lt;/p>
&lt;p>先輸入以下資訊：&lt;/p>
&lt;ul>
&lt;li>Host： localhost&lt;/li>
&lt;li>Port：1433&lt;/li>
&lt;li>Database：master&lt;/li>
&lt;/ul>
&lt;p>再輸入&lt;/p>
&lt;ul>
&lt;li>User name：sa&lt;/li>
&lt;li>Password：20210807Chunyen （我上面預設的）
&lt;ul>
&lt;li>輸入完畢點擊 Test Connection&lt;/li>
&lt;li>跳出 Connection Test 視窗。&lt;/li>
&lt;li>點擊 OK&lt;/li>
&lt;li>再點擊 Finish.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>接下來 dbeaver 就會連線到你在上面使用 Docker 建立的 SQL Server 囉！&lt;/p>
&lt;p>&lt;img src="/images/blogger/20210807_m1-sqlserver/06.dbeaver-sql-server-schema.png"
loading="lazy"
alt="使用 dbeaver 查看 sql-server schema"
>&lt;/p>
&lt;h2 id="結束">結束&lt;/h2>
&lt;p>本篇結束，已經連到 SQL Server !!!&lt;/p>
&lt;p>可以連線後，就可以繼續做工作的事情囉！&lt;/p>
&lt;p>祝福讀完文章的你，一路順風 XD&lt;/p>
&lt;p>如果你有碰到任何問題，歡迎你在下面留言！&lt;/p></content></item><item><title>【BUG】當 DevC++ 亂碼，如何解決呢？</title><link>/p/how-to-fix-dev-cpp-garbled/</link><pubDate>Wed, 16 Jan 2019 23:22:00 +0000</pubDate><author>admin@chunyen.xyz (陳雋諺, Chun-Yen Chen)</author><guid>/p/how-to-fix-dev-cpp-garbled/</guid><description/><tags><tag>亂碼</tag><tag>BUG</tag><tag>Dev-C++</tag><tag>garbled</tag><tag>IDE</tag></tags><categories><category>Experience</category></categories><image/><content>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>如標題，最近正從 C 語言 進階到 C++ 時，&lt;/p>
&lt;p>在 C 語言 學習過程中使用的 Dev-C++ 也隨之陪伴我到 C++，&lt;/p>
&lt;p>但是最近碰到了一件事，就是 cout 中文字時，會跑出亂碼。&lt;/p>
&lt;p>&lt;img src="/images/blogger/20190116_dev-c&amp;#43;&amp;#43;/01.dev-c&amp;#43;&amp;#43;_garbled.jpg"
loading="lazy"
alt="Dev-C&amp;#43;&amp;#43; 亂碼"
>&lt;/p>
&lt;p>應該要印出 &amp;ldquo;是字元&amp;rdquo; 才對。&lt;/p>
&lt;p>不過不知道為什麼查詢到這個問題的結果蠻少的，&lt;/p>
&lt;p>大部分都說 Dev-C++ 因停止開發了，所以趕快換IDE。&lt;/p>
&lt;p>所以打這篇文就來解決一下吧！&lt;/p>
&lt;h2 id="解決流程">解決流程&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Win+R&lt;/code> (Alt+Ctrl 中間的) 進入到 執行&lt;/li>
&lt;li>輸入 &lt;code>CMD&lt;/code> (命令提示元)&lt;/li>
&lt;li>對&lt;code>標題列按右鍵&lt;/code>&lt;/li>
&lt;li>點選&lt;code>預設值&lt;/code>
&lt;img src="/images/blogger/20190116_dev-c&amp;#43;&amp;#43;/02.setting_cmd_default.png"
loading="lazy"
alt="Dev-C&amp;#43;&amp;#43; CMD 預設設定介面"
>&lt;/li>
&lt;li>進入&lt;code>主控台視窗&lt;/code>&lt;/li>
&lt;li>打勾 &lt;code>使用舊版主控台&lt;/code>&lt;/li>
&lt;li>對標題列按右鍵：&lt;/li>
&lt;li>進入主控台視窗 預設：&lt;/li>
&lt;li>將 使用舊版主控台 打勾 ，我電腦不會自動重開機，所以請放心。&lt;/li>
&lt;/ul>
&lt;h3 id="預設設定">預設設定&lt;/h3>
&lt;p>&lt;img src="/images/blogger/20190116_dev-c&amp;#43;&amp;#43;/03.setting_default.png"
loading="lazy"
alt="Dev-C&amp;#43;&amp;#43; CMD 預設設定介面"
>&lt;/p>
&lt;h3 id="更改後設定">更改後設定&lt;/h3>
&lt;p>&lt;img src="/images/blogger/20190116_dev-c&amp;#43;&amp;#43;/04.setting_change.png"
loading="lazy"
alt="Dev-C&amp;#43;&amp;#43; CMD 設定後介面"
>&lt;/p>
&lt;p>記得點擊確定。&lt;/p>
&lt;h3 id="再次確認有無-dev-c-亂碼">再次確認有無 Dev-C++ 亂碼&lt;/h3>
&lt;p>來看看程式碼，再次執行就會發現已經沒問題囉！&lt;/p>
&lt;p>&lt;img src="/images/blogger/20190116_dev-c&amp;#43;&amp;#43;/05.finish.jpeg"
loading="lazy"
alt="Dev-C&amp;#43;&amp;#43; CMD 設定後介面"
>&lt;/p>
&lt;p>完成！&lt;/p></content></item></channel></rss>